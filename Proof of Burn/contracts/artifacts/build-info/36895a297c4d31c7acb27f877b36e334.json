{
	"id": "36895a297c4d31c7acb27f877b36e334",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/transfer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; // Import the IERC20 interface\r\n\r\ncontract FeeCollector {\r\n    using SafeERC20 for IERC20;\r\n\r\n    address public owner;\r\n    uint256 public balance;\r\n\r\n    event TransferReceived(address _from, uint _amount);\r\n    event TransferSent(address _from, address _destAddr, uint _amount);\r\n    event ERC20TransferSent(address _from, address _destAddr, uint _amount);\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    receive() payable external {\r\n        balance += msg.value;\r\n        emit TransferReceived(msg.sender, msg.value);\r\n    }\r\n\r\n    function withdraw(uint amount, address payable destAddr) public {\r\n        require(msg.sender == owner, \"Only owner can withdraw funds\");\r\n        require(amount <= balance, \"Insufficient funds\");\r\n\r\n        destAddr.transfer(amount);\r\n        balance -= amount;\r\n        emit TransferSent(msg.sender, destAddr, amount);\r\n    }\r\n\r\n    // Function to transfer ERC20 tokens like MedicalToken (MT)\r\n    function transferERC20(IERC20 token, address to, uint256 amount) public {\r\n        require(msg.sender == owner, \"Only owner can withdraw funds\");\r\n        uint256 erc20balance = token.balanceOf(address(this));\r\n        require(amount <= erc20balance, \"Balance is low\");\r\n\r\n        token.safeTransfer(to, amount); // Using SafeERC20's safeTransfer function\r\n        emit ERC20TransferSent(msg.sender, to, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/transfer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/transfer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/transfer.sol": {
				"FeeCollector": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_destAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "ERC20TransferSent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "TransferReceived",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_destAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "TransferSent",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "destAddr",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/transfer.sol\":218:1561  contract FeeCollector {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/transfer.sol\":551:602  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/transfer.sol\":584:594  msg.sender */\n  caller\n    /* \"contracts/transfer.sol\":576:581  owner */\n  0x00\n  dup1\n    /* \"contracts/transfer.sol\":576:594  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/transfer.sol\":218:1561  contract FeeCollector {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/transfer.sol\":218:1561  contract FeeCollector {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xf714ce\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9db5dbe4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb69ef8a8\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/transfer.sol\":659:668  msg.value */\n      callvalue\n        /* \"contracts/transfer.sol\":648:655  balance */\n      0x01\n      0x00\n        /* \"contracts/transfer.sol\":648:668  balance += msg.value */\n      dup3\n      dup3\n      sload\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/transfer.sol\":684:723  TransferReceived(msg.sender, msg.value) */\n      0xf1b03f708b9c39f453fe3f0cef84164c7d6f7df836df0796e1e9c2bce6ee397e\n        /* \"contracts/transfer.sol\":701:711  msg.sender */\n      caller\n        /* \"contracts/transfer.sol\":713:722  msg.value */\n      callvalue\n        /* \"contracts/transfer.sol\":684:723  TransferReceived(msg.sender, msg.value) */\n      mload(0x40)\n      tag_11\n      swap3\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/transfer.sol\":218:1561  contract FeeCollector {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/transfer.sol\":739:1066  function withdraw(uint amount, address payable destAddr) public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/transfer.sol\":282:302  address public owner */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/transfer.sol\":1139:1558  function transferERC20(IERC20 token, address to, uint256 amount) public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/transfer.sol\":309:331  uint256 public balance */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/transfer.sol\":739:1066  function withdraw(uint amount, address payable destAddr) public {... */\n    tag_17:\n        /* \"contracts/transfer.sol\":836:841  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/transfer.sol\":822:841  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/transfer.sol\":822:832  msg.sender */\n      caller\n        /* \"contracts/transfer.sol\":822:841  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/transfer.sol\":814:875  require(msg.sender == owner, \"Only owner can withdraw funds\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"contracts/transfer.sol\":904:911  balance */\n      sload(0x01)\n        /* \"contracts/transfer.sol\":894:900  amount */\n      dup3\n        /* \"contracts/transfer.sol\":894:911  amount <= balance */\n      gt\n      iszero\n        /* \"contracts/transfer.sol\":886:934  require(amount <= balance, \"Insufficient funds\") */\n      tag_37\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"contracts/transfer.sol\":947:955  destAddr */\n      dup1\n        /* \"contracts/transfer.sol\":947:964  destAddr.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/transfer.sol\":947:972  destAddr.transfer(amount) */\n      0x08fc\n        /* \"contracts/transfer.sol\":965:971  amount */\n      dup4\n        /* \"contracts/transfer.sol\":947:972  destAddr.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n        /* \"contracts/transfer.sol\":994:1000  amount */\n      dup2\n        /* \"contracts/transfer.sol\":983:990  balance */\n      0x01\n      0x00\n        /* \"contracts/transfer.sol\":983:1000  balance -= amount */\n      dup3\n      dup3\n      sload\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/transfer.sol\":1016:1058  TransferSent(msg.sender, destAddr, amount) */\n      0xfda3a3e0e1479b43cb1c701f7576187f4c4ad80768d627387e00184302f7d88e\n        /* \"contracts/transfer.sol\":1029:1039  msg.sender */\n      caller\n        /* \"contracts/transfer.sol\":1041:1049  destAddr */\n      dup3\n        /* \"contracts/transfer.sol\":1051:1057  amount */\n      dup5\n        /* \"contracts/transfer.sol\":1016:1058  TransferSent(msg.sender, destAddr, amount) */\n      mload(0x40)\n      tag_44\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/transfer.sol\":739:1066  function withdraw(uint amount, address payable destAddr) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/transfer.sol\":282:302  address public owner */\n    tag_20:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/transfer.sol\":1139:1558  function transferERC20(IERC20 token, address to, uint256 amount) public {... */\n    tag_27:\n        /* \"contracts/transfer.sol\":1244:1249  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/transfer.sol\":1230:1249  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/transfer.sol\":1230:1240  msg.sender */\n      caller\n        /* \"contracts/transfer.sol\":1230:1249  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/transfer.sol\":1222:1283  require(msg.sender == owner, \"Only owner can withdraw funds\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_36\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"contracts/transfer.sol\":1294:1314  uint256 erc20balance */\n      0x00\n        /* \"contracts/transfer.sol\":1317:1322  token */\n      dup4\n        /* \"contracts/transfer.sol\":1317:1332  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/transfer.sol\":1341:1345  this */\n      address\n        /* \"contracts/transfer.sol\":1317:1347  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_49:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"contracts/transfer.sol\":1294:1347  uint256 erc20balance = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/transfer.sol\":1376:1388  erc20balance */\n      dup1\n        /* \"contracts/transfer.sol\":1366:1372  amount */\n      dup3\n        /* \"contracts/transfer.sol\":1366:1388  amount <= erc20balance */\n      gt\n      iszero\n        /* \"contracts/transfer.sol\":1358:1407  require(amount <= erc20balance, \"Balance is low\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"contracts/transfer.sol\":1420:1450  token.safeTransfer(to, amount) */\n      tag_57\n        /* \"contracts/transfer.sol\":1439:1441  to */\n      dup4\n        /* \"contracts/transfer.sol\":1443:1449  amount */\n      dup4\n        /* \"contracts/transfer.sol\":1420:1425  token */\n      dup7\n        /* \"contracts/transfer.sol\":1420:1438  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_58\n      swap1\n        /* \"contracts/transfer.sol\":1420:1450  token.safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_57:\n        /* \"contracts/transfer.sol\":1509:1550  ERC20TransferSent(msg.sender, to, amount) */\n      0x03501c7341fda73ec7c804f841cec1d8d25a04b5a430589f0624026eb1cff370\n        /* \"contracts/transfer.sol\":1527:1537  msg.sender */\n      caller\n        /* \"contracts/transfer.sol\":1539:1541  to */\n      dup5\n        /* \"contracts/transfer.sol\":1543:1549  amount */\n      dup5\n        /* \"contracts/transfer.sol\":1509:1550  ERC20TransferSent(msg.sender, to, amount) */\n      mload(0x40)\n      tag_59\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/transfer.sol\":1211:1558  {... */\n      pop\n        /* \"contracts/transfer.sol\":1139:1558  function transferERC20(IERC20 token, address to, uint256 amount) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/transfer.sol\":309:331  uint256 public balance */\n    tag_30:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_62\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_63\n      swap3\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_66\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_67\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_68\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_71\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_74\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_75\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_77\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_83\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_82)\n    tag_83:\n      0x60\n      swap2\n      pop\n    tag_82:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_84\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_85\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_87\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_88\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_89\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_90)\n    tag_87:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_91:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_92\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_86)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_86:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_95\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:84   */\n    tag_97:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:270   */\n    tag_98:\n        /* \"#utility.yul\":138:215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":128:216   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x11\n        /* \"#utility.yul\":232:233   */\n      0x04\n        /* \"#utility.yul\":225:240   */\n      mstore\n        /* \"#utility.yul\":259:263   */\n      0x24\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":249:264   */\n      revert\n        /* \"#utility.yul\":276:467   */\n    tag_10:\n        /* \"#utility.yul\":316:319   */\n      0x00\n        /* \"#utility.yul\":335:355   */\n      tag_140\n        /* \"#utility.yul\":353:354   */\n      dup3\n        /* \"#utility.yul\":335:355   */\n      tag_97\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":330:355   */\n      swap2\n      pop\n        /* \"#utility.yul\":369:389   */\n      tag_141\n        /* \"#utility.yul\":387:388   */\n      dup4\n        /* \"#utility.yul\":369:389   */\n      tag_97\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":364:389   */\n      swap3\n      pop\n        /* \"#utility.yul\":412:413   */\n      dup3\n        /* \"#utility.yul\":409:410   */\n      dup3\n        /* \"#utility.yul\":405:414   */\n      add\n        /* \"#utility.yul\":398:414   */\n      swap1\n      pop\n        /* \"#utility.yul\":433:436   */\n      dup1\n        /* \"#utility.yul\":430:431   */\n      dup3\n        /* \"#utility.yul\":427:437   */\n      gt\n        /* \"#utility.yul\":424:460   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":440:458   */\n      tag_143\n      tag_98\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":424:460   */\n    tag_142:\n        /* \"#utility.yul\":276:467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":473:599   */\n    tag_99:\n        /* \"#utility.yul\":510:517   */\n      0x00\n        /* \"#utility.yul\":550:592   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":543:548   */\n      dup3\n        /* \"#utility.yul\":539:593   */\n      and\n        /* \"#utility.yul\":528:593   */\n      swap1\n      pop\n        /* \"#utility.yul\":473:599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":605:701   */\n    tag_100:\n        /* \"#utility.yul\":642:649   */\n      0x00\n        /* \"#utility.yul\":671:695   */\n      tag_146\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":671:695   */\n      tag_99\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":660:695   */\n      swap1\n      pop\n        /* \"#utility.yul\":605:701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":707:825   */\n    tag_101:\n        /* \"#utility.yul\":794:818   */\n      tag_148\n        /* \"#utility.yul\":812:817   */\n      dup2\n        /* \"#utility.yul\":794:818   */\n      tag_100\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":789:792   */\n      dup3\n        /* \"#utility.yul\":782:819   */\n      mstore\n        /* \"#utility.yul\":707:825   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":831:949   */\n    tag_102:\n        /* \"#utility.yul\":918:942   */\n      tag_150\n        /* \"#utility.yul\":936:941   */\n      dup2\n        /* \"#utility.yul\":918:942   */\n      tag_97\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":913:916   */\n      dup3\n        /* \"#utility.yul\":906:943   */\n      mstore\n        /* \"#utility.yul\":831:949   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":955:1287   */\n    tag_12:\n        /* \"#utility.yul\":1076:1080   */\n      0x00\n        /* \"#utility.yul\":1114:1116   */\n      0x40\n        /* \"#utility.yul\":1103:1112   */\n      dup3\n        /* \"#utility.yul\":1099:1117   */\n      add\n        /* \"#utility.yul\":1091:1117   */\n      swap1\n      pop\n        /* \"#utility.yul\":1127:1198   */\n      tag_152\n        /* \"#utility.yul\":1195:1196   */\n      0x00\n        /* \"#utility.yul\":1184:1193   */\n      dup4\n        /* \"#utility.yul\":1180:1197   */\n      add\n        /* \"#utility.yul\":1171:1177   */\n      dup6\n        /* \"#utility.yul\":1127:1198   */\n      tag_101\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1208:1280   */\n      tag_153\n        /* \"#utility.yul\":1276:1278   */\n      0x20\n        /* \"#utility.yul\":1265:1274   */\n      dup4\n        /* \"#utility.yul\":1261:1279   */\n      add\n        /* \"#utility.yul\":1252:1258   */\n      dup5\n        /* \"#utility.yul\":1208:1280   */\n      tag_102\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":955:1287   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1374:1491   */\n    tag_104:\n        /* \"#utility.yul\":1483:1484   */\n      0x00\n        /* \"#utility.yul\":1480:1481   */\n      dup1\n        /* \"#utility.yul\":1473:1485   */\n      revert\n        /* \"#utility.yul\":1620:1742   */\n    tag_106:\n        /* \"#utility.yul\":1693:1717   */\n      tag_158\n        /* \"#utility.yul\":1711:1716   */\n      dup2\n        /* \"#utility.yul\":1693:1717   */\n      tag_97\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1686:1691   */\n      dup2\n        /* \"#utility.yul\":1683:1718   */\n      eq\n        /* \"#utility.yul\":1673:1736   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1732:1733   */\n      0x00\n        /* \"#utility.yul\":1729:1730   */\n      dup1\n        /* \"#utility.yul\":1722:1734   */\n      revert\n        /* \"#utility.yul\":1673:1736   */\n    tag_159:\n        /* \"#utility.yul\":1620:1742   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1748:1887   */\n    tag_107:\n        /* \"#utility.yul\":1794:1799   */\n      0x00\n        /* \"#utility.yul\":1832:1838   */\n      dup2\n        /* \"#utility.yul\":1819:1839   */\n      calldataload\n        /* \"#utility.yul\":1810:1839   */\n      swap1\n      pop\n        /* \"#utility.yul\":1848:1881   */\n      tag_161\n        /* \"#utility.yul\":1875:1880   */\n      dup2\n        /* \"#utility.yul\":1848:1881   */\n      tag_106\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1748:1887   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1893:1997   */\n    tag_108:\n        /* \"#utility.yul\":1938:1945   */\n      0x00\n        /* \"#utility.yul\":1967:1991   */\n      tag_163\n        /* \"#utility.yul\":1985:1990   */\n      dup3\n        /* \"#utility.yul\":1967:1991   */\n      tag_99\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1956:1991   */\n      swap1\n      pop\n        /* \"#utility.yul\":1893:1997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2003:2141   */\n    tag_109:\n        /* \"#utility.yul\":2084:2116   */\n      tag_165\n        /* \"#utility.yul\":2110:2115   */\n      dup2\n        /* \"#utility.yul\":2084:2116   */\n      tag_108\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2077:2082   */\n      dup2\n        /* \"#utility.yul\":2074:2117   */\n      eq\n        /* \"#utility.yul\":2064:2135   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2131:2132   */\n      0x00\n        /* \"#utility.yul\":2128:2129   */\n      dup1\n        /* \"#utility.yul\":2121:2133   */\n      revert\n        /* \"#utility.yul\":2064:2135   */\n    tag_166:\n        /* \"#utility.yul\":2003:2141   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2147:2302   */\n    tag_110:\n        /* \"#utility.yul\":2201:2206   */\n      0x00\n        /* \"#utility.yul\":2239:2245   */\n      dup2\n        /* \"#utility.yul\":2226:2246   */\n      calldataload\n        /* \"#utility.yul\":2217:2246   */\n      swap1\n      pop\n        /* \"#utility.yul\":2255:2296   */\n      tag_168\n        /* \"#utility.yul\":2290:2295   */\n      dup2\n        /* \"#utility.yul\":2255:2296   */\n      tag_109\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2147:2302   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2308:2798   */\n    tag_16:\n        /* \"#utility.yul\":2384:2390   */\n      0x00\n        /* \"#utility.yul\":2392:2398   */\n      dup1\n        /* \"#utility.yul\":2441:2443   */\n      0x40\n        /* \"#utility.yul\":2429:2438   */\n      dup4\n        /* \"#utility.yul\":2420:2427   */\n      dup6\n        /* \"#utility.yul\":2416:2439   */\n      sub\n        /* \"#utility.yul\":2412:2444   */\n      slt\n        /* \"#utility.yul\":2409:2528   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2447:2526   */\n      tag_171\n      tag_104\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2409:2528   */\n    tag_170:\n        /* \"#utility.yul\":2567:2568   */\n      0x00\n        /* \"#utility.yul\":2592:2645   */\n      tag_172\n        /* \"#utility.yul\":2637:2644   */\n      dup6\n        /* \"#utility.yul\":2628:2634   */\n      dup3\n        /* \"#utility.yul\":2617:2626   */\n      dup7\n        /* \"#utility.yul\":2613:2635   */\n      add\n        /* \"#utility.yul\":2592:2645   */\n      tag_107\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2582:2645   */\n      swap3\n      pop\n        /* \"#utility.yul\":2538:2655   */\n      pop\n        /* \"#utility.yul\":2694:2696   */\n      0x20\n        /* \"#utility.yul\":2720:2781   */\n      tag_173\n        /* \"#utility.yul\":2773:2780   */\n      dup6\n        /* \"#utility.yul\":2764:2770   */\n      dup3\n        /* \"#utility.yul\":2753:2762   */\n      dup7\n        /* \"#utility.yul\":2749:2771   */\n      add\n        /* \"#utility.yul\":2720:2781   */\n      tag_110\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2710:2781   */\n      swap2\n      pop\n        /* \"#utility.yul\":2665:2791   */\n      pop\n        /* \"#utility.yul\":2308:2798   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2804:3026   */\n    tag_22:\n        /* \"#utility.yul\":2897:2901   */\n      0x00\n        /* \"#utility.yul\":2935:2937   */\n      0x20\n        /* \"#utility.yul\":2924:2933   */\n      dup3\n        /* \"#utility.yul\":2920:2938   */\n      add\n        /* \"#utility.yul\":2912:2938   */\n      swap1\n      pop\n        /* \"#utility.yul\":2948:3019   */\n      tag_175\n        /* \"#utility.yul\":3016:3017   */\n      0x00\n        /* \"#utility.yul\":3005:3014   */\n      dup4\n        /* \"#utility.yul\":3001:3018   */\n      add\n        /* \"#utility.yul\":2992:2998   */\n      dup5\n        /* \"#utility.yul\":2948:3019   */\n      tag_101\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2804:3026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3032:3141   */\n    tag_111:\n        /* \"#utility.yul\":3082:3089   */\n      0x00\n        /* \"#utility.yul\":3111:3135   */\n      tag_177\n        /* \"#utility.yul\":3129:3134   */\n      dup3\n        /* \"#utility.yul\":3111:3135   */\n      tag_100\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3100:3135   */\n      swap1\n      pop\n        /* \"#utility.yul\":3032:3141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3147:3295   */\n    tag_112:\n        /* \"#utility.yul\":3233:3270   */\n      tag_179\n        /* \"#utility.yul\":3264:3269   */\n      dup2\n        /* \"#utility.yul\":3233:3270   */\n      tag_111\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":3226:3231   */\n      dup2\n        /* \"#utility.yul\":3223:3271   */\n      eq\n        /* \"#utility.yul\":3213:3289   */\n      tag_180\n      jumpi\n        /* \"#utility.yul\":3285:3286   */\n      0x00\n        /* \"#utility.yul\":3282:3283   */\n      dup1\n        /* \"#utility.yul\":3275:3287   */\n      revert\n        /* \"#utility.yul\":3213:3289   */\n    tag_180:\n        /* \"#utility.yul\":3147:3295   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3301:3466   */\n    tag_113:\n        /* \"#utility.yul\":3360:3365   */\n      0x00\n        /* \"#utility.yul\":3398:3404   */\n      dup2\n        /* \"#utility.yul\":3385:3405   */\n      calldataload\n        /* \"#utility.yul\":3376:3405   */\n      swap1\n      pop\n        /* \"#utility.yul\":3414:3460   */\n      tag_182\n        /* \"#utility.yul\":3454:3459   */\n      dup2\n        /* \"#utility.yul\":3414:3460   */\n      tag_112\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3301:3466   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3472:3594   */\n    tag_114:\n        /* \"#utility.yul\":3545:3569   */\n      tag_184\n        /* \"#utility.yul\":3563:3568   */\n      dup2\n        /* \"#utility.yul\":3545:3569   */\n      tag_100\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3538:3543   */\n      dup2\n        /* \"#utility.yul\":3535:3570   */\n      eq\n        /* \"#utility.yul\":3525:3588   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":3584:3585   */\n      0x00\n        /* \"#utility.yul\":3581:3582   */\n      dup1\n        /* \"#utility.yul\":3574:3586   */\n      revert\n        /* \"#utility.yul\":3525:3588   */\n    tag_185:\n        /* \"#utility.yul\":3472:3594   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3600:3739   */\n    tag_115:\n        /* \"#utility.yul\":3646:3651   */\n      0x00\n        /* \"#utility.yul\":3684:3690   */\n      dup2\n        /* \"#utility.yul\":3671:3691   */\n      calldataload\n        /* \"#utility.yul\":3662:3691   */\n      swap1\n      pop\n        /* \"#utility.yul\":3700:3733   */\n      tag_187\n        /* \"#utility.yul\":3727:3732   */\n      dup2\n        /* \"#utility.yul\":3700:3733   */\n      tag_114\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3600:3739   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3745:4390   */\n    tag_26:\n        /* \"#utility.yul\":3835:3841   */\n      0x00\n        /* \"#utility.yul\":3843:3849   */\n      dup1\n        /* \"#utility.yul\":3851:3857   */\n      0x00\n        /* \"#utility.yul\":3900:3902   */\n      0x60\n        /* \"#utility.yul\":3888:3897   */\n      dup5\n        /* \"#utility.yul\":3879:3886   */\n      dup7\n        /* \"#utility.yul\":3875:3898   */\n      sub\n        /* \"#utility.yul\":3871:3903   */\n      slt\n        /* \"#utility.yul\":3868:3987   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":3906:3985   */\n      tag_190\n      tag_104\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3868:3987   */\n    tag_189:\n        /* \"#utility.yul\":4026:4027   */\n      0x00\n        /* \"#utility.yul\":4051:4117   */\n      tag_191\n        /* \"#utility.yul\":4109:4116   */\n      dup7\n        /* \"#utility.yul\":4100:4106   */\n      dup3\n        /* \"#utility.yul\":4089:4098   */\n      dup8\n        /* \"#utility.yul\":4085:4107   */\n      add\n        /* \"#utility.yul\":4051:4117   */\n      tag_113\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4041:4117   */\n      swap4\n      pop\n        /* \"#utility.yul\":3997:4127   */\n      pop\n        /* \"#utility.yul\":4166:4168   */\n      0x20\n        /* \"#utility.yul\":4192:4245   */\n      tag_192\n        /* \"#utility.yul\":4237:4244   */\n      dup7\n        /* \"#utility.yul\":4228:4234   */\n      dup3\n        /* \"#utility.yul\":4217:4226   */\n      dup8\n        /* \"#utility.yul\":4213:4235   */\n      add\n        /* \"#utility.yul\":4192:4245   */\n      tag_115\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4182:4245   */\n      swap3\n      pop\n        /* \"#utility.yul\":4137:4255   */\n      pop\n        /* \"#utility.yul\":4294:4296   */\n      0x40\n        /* \"#utility.yul\":4320:4373   */\n      tag_193\n        /* \"#utility.yul\":4365:4372   */\n      dup7\n        /* \"#utility.yul\":4356:4362   */\n      dup3\n        /* \"#utility.yul\":4345:4354   */\n      dup8\n        /* \"#utility.yul\":4341:4363   */\n      add\n        /* \"#utility.yul\":4320:4373   */\n      tag_107\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":4310:4373   */\n      swap2\n      pop\n        /* \"#utility.yul\":4265:4383   */\n      pop\n        /* \"#utility.yul\":3745:4390   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4396:4618   */\n    tag_32:\n        /* \"#utility.yul\":4489:4493   */\n      0x00\n        /* \"#utility.yul\":4527:4529   */\n      0x20\n        /* \"#utility.yul\":4516:4525   */\n      dup3\n        /* \"#utility.yul\":4512:4530   */\n      add\n        /* \"#utility.yul\":4504:4530   */\n      swap1\n      pop\n        /* \"#utility.yul\":4540:4611   */\n      tag_195\n        /* \"#utility.yul\":4608:4609   */\n      0x00\n        /* \"#utility.yul\":4597:4606   */\n      dup4\n        /* \"#utility.yul\":4593:4610   */\n      add\n        /* \"#utility.yul\":4584:4590   */\n      dup5\n        /* \"#utility.yul\":4540:4611   */\n      tag_102\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4396:4618   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4624:4793   */\n    tag_116:\n        /* \"#utility.yul\":4708:4719   */\n      0x00\n        /* \"#utility.yul\":4742:4748   */\n      dup3\n        /* \"#utility.yul\":4737:4740   */\n      dup3\n        /* \"#utility.yul\":4730:4749   */\n      mstore\n        /* \"#utility.yul\":4782:4786   */\n      0x20\n        /* \"#utility.yul\":4777:4780   */\n      dup3\n        /* \"#utility.yul\":4773:4787   */\n      add\n        /* \"#utility.yul\":4758:4787   */\n      swap1\n      pop\n        /* \"#utility.yul\":4624:4793   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4799:4978   */\n    tag_117:\n        /* \"#utility.yul\":4939:4970   */\n      0x4f6e6c79206f776e65722063616e2077697468647261772066756e6473000000\n        /* \"#utility.yul\":4935:4936   */\n      0x00\n        /* \"#utility.yul\":4927:4933   */\n      dup3\n        /* \"#utility.yul\":4923:4937   */\n      add\n        /* \"#utility.yul\":4916:4971   */\n      mstore\n        /* \"#utility.yul\":4799:4978   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4984:5350   */\n    tag_118:\n        /* \"#utility.yul\":5126:5129   */\n      0x00\n        /* \"#utility.yul\":5147:5214   */\n      tag_199\n        /* \"#utility.yul\":5211:5213   */\n      0x1d\n        /* \"#utility.yul\":5206:5209   */\n      dup4\n        /* \"#utility.yul\":5147:5214   */\n      tag_116\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":5140:5214   */\n      swap2\n      pop\n        /* \"#utility.yul\":5223:5316   */\n      tag_200\n        /* \"#utility.yul\":5312:5315   */\n      dup3\n        /* \"#utility.yul\":5223:5316   */\n      tag_117\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5341:5343   */\n      0x20\n        /* \"#utility.yul\":5336:5339   */\n      dup3\n        /* \"#utility.yul\":5332:5344   */\n      add\n        /* \"#utility.yul\":5325:5344   */\n      swap1\n      pop\n        /* \"#utility.yul\":4984:5350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5356:5775   */\n    tag_36:\n        /* \"#utility.yul\":5522:5526   */\n      0x00\n        /* \"#utility.yul\":5560:5562   */\n      0x20\n        /* \"#utility.yul\":5549:5558   */\n      dup3\n        /* \"#utility.yul\":5545:5563   */\n      add\n        /* \"#utility.yul\":5537:5563   */\n      swap1\n      pop\n        /* \"#utility.yul\":5609:5618   */\n      dup2\n        /* \"#utility.yul\":5603:5607   */\n      dup2\n        /* \"#utility.yul\":5599:5619   */\n      sub\n        /* \"#utility.yul\":5595:5596   */\n      0x00\n        /* \"#utility.yul\":5584:5593   */\n      dup4\n        /* \"#utility.yul\":5580:5597   */\n      add\n        /* \"#utility.yul\":5573:5620   */\n      mstore\n        /* \"#utility.yul\":5637:5768   */\n      tag_202\n        /* \"#utility.yul\":5763:5767   */\n      dup2\n        /* \"#utility.yul\":5637:5768   */\n      tag_118\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":5629:5768   */\n      swap1\n      pop\n        /* \"#utility.yul\":5356:5775   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5781:5949   */\n    tag_119:\n        /* \"#utility.yul\":5921:5941   */\n      0x496e73756666696369656e742066756e64730000000000000000000000000000\n        /* \"#utility.yul\":5917:5918   */\n      0x00\n        /* \"#utility.yul\":5909:5915   */\n      dup3\n        /* \"#utility.yul\":5905:5919   */\n      add\n        /* \"#utility.yul\":5898:5942   */\n      mstore\n        /* \"#utility.yul\":5781:5949   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5955:6321   */\n    tag_120:\n        /* \"#utility.yul\":6097:6100   */\n      0x00\n        /* \"#utility.yul\":6118:6185   */\n      tag_205\n        /* \"#utility.yul\":6182:6184   */\n      0x12\n        /* \"#utility.yul\":6177:6180   */\n      dup4\n        /* \"#utility.yul\":6118:6185   */\n      tag_116\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":6111:6185   */\n      swap2\n      pop\n        /* \"#utility.yul\":6194:6287   */\n      tag_206\n        /* \"#utility.yul\":6283:6286   */\n      dup3\n        /* \"#utility.yul\":6194:6287   */\n      tag_119\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":6312:6314   */\n      0x20\n        /* \"#utility.yul\":6307:6310   */\n      dup3\n        /* \"#utility.yul\":6303:6315   */\n      add\n        /* \"#utility.yul\":6296:6315   */\n      swap1\n      pop\n        /* \"#utility.yul\":5955:6321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6327:6746   */\n    tag_39:\n        /* \"#utility.yul\":6493:6497   */\n      0x00\n        /* \"#utility.yul\":6531:6533   */\n      0x20\n        /* \"#utility.yul\":6520:6529   */\n      dup3\n        /* \"#utility.yul\":6516:6534   */\n      add\n        /* \"#utility.yul\":6508:6534   */\n      swap1\n      pop\n        /* \"#utility.yul\":6580:6589   */\n      dup2\n        /* \"#utility.yul\":6574:6578   */\n      dup2\n        /* \"#utility.yul\":6570:6590   */\n      sub\n        /* \"#utility.yul\":6566:6567   */\n      0x00\n        /* \"#utility.yul\":6555:6564   */\n      dup4\n        /* \"#utility.yul\":6551:6568   */\n      add\n        /* \"#utility.yul\":6544:6591   */\n      mstore\n        /* \"#utility.yul\":6608:6739   */\n      tag_208\n        /* \"#utility.yul\":6734:6738   */\n      dup2\n        /* \"#utility.yul\":6608:6739   */\n      tag_120\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":6600:6739   */\n      swap1\n      pop\n        /* \"#utility.yul\":6327:6746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6752:6946   */\n    tag_43:\n        /* \"#utility.yul\":6792:6796   */\n      0x00\n        /* \"#utility.yul\":6812:6832   */\n      tag_210\n        /* \"#utility.yul\":6830:6831   */\n      dup3\n        /* \"#utility.yul\":6812:6832   */\n      tag_97\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":6807:6832   */\n      swap2\n      pop\n        /* \"#utility.yul\":6846:6866   */\n      tag_211\n        /* \"#utility.yul\":6864:6865   */\n      dup4\n        /* \"#utility.yul\":6846:6866   */\n      tag_97\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":6841:6866   */\n      swap3\n      pop\n        /* \"#utility.yul\":6890:6891   */\n      dup3\n        /* \"#utility.yul\":6887:6888   */\n      dup3\n        /* \"#utility.yul\":6883:6892   */\n      sub\n        /* \"#utility.yul\":6875:6892   */\n      swap1\n      pop\n        /* \"#utility.yul\":6914:6915   */\n      dup2\n        /* \"#utility.yul\":6908:6912   */\n      dup2\n        /* \"#utility.yul\":6905:6916   */\n      gt\n        /* \"#utility.yul\":6902:6939   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":6919:6937   */\n      tag_213\n      tag_98\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":6902:6939   */\n    tag_212:\n        /* \"#utility.yul\":6752:6946   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6952:7012   */\n    tag_121:\n        /* \"#utility.yul\":6980:6983   */\n      0x00\n        /* \"#utility.yul\":7001:7006   */\n      dup2\n        /* \"#utility.yul\":6994:7006   */\n      swap1\n      pop\n        /* \"#utility.yul\":6952:7012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7018:7160   */\n    tag_122:\n        /* \"#utility.yul\":7068:7077   */\n      0x00\n        /* \"#utility.yul\":7101:7154   */\n      tag_216\n        /* \"#utility.yul\":7119:7153   */\n      tag_217\n        /* \"#utility.yul\":7128:7152   */\n      tag_218\n        /* \"#utility.yul\":7146:7151   */\n      dup5\n        /* \"#utility.yul\":7128:7152   */\n      tag_99\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":7119:7153   */\n      tag_121\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":7101:7154   */\n      tag_99\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":7088:7154   */\n      swap1\n      pop\n        /* \"#utility.yul\":7018:7160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7166:7292   */\n    tag_123:\n        /* \"#utility.yul\":7216:7225   */\n      0x00\n        /* \"#utility.yul\":7249:7286   */\n      tag_220\n        /* \"#utility.yul\":7280:7285   */\n      dup3\n        /* \"#utility.yul\":7249:7286   */\n      tag_122\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":7236:7286   */\n      swap1\n      pop\n        /* \"#utility.yul\":7166:7292   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7298:7432   */\n    tag_124:\n        /* \"#utility.yul\":7356:7365   */\n      0x00\n        /* \"#utility.yul\":7389:7426   */\n      tag_222\n        /* \"#utility.yul\":7420:7425   */\n      dup3\n        /* \"#utility.yul\":7389:7426   */\n      tag_123\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":7376:7426   */\n      swap1\n      pop\n        /* \"#utility.yul\":7298:7432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7438:7585   */\n    tag_125:\n        /* \"#utility.yul\":7533:7578   */\n      tag_224\n        /* \"#utility.yul\":7572:7577   */\n      dup2\n        /* \"#utility.yul\":7533:7578   */\n      tag_124\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7528:7531   */\n      dup3\n        /* \"#utility.yul\":7521:7579   */\n      mstore\n        /* \"#utility.yul\":7438:7585   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7591:8049   */\n    tag_45:\n        /* \"#utility.yul\":7748:7752   */\n      0x00\n        /* \"#utility.yul\":7786:7788   */\n      0x60\n        /* \"#utility.yul\":7775:7784   */\n      dup3\n        /* \"#utility.yul\":7771:7789   */\n      add\n        /* \"#utility.yul\":7763:7789   */\n      swap1\n      pop\n        /* \"#utility.yul\":7799:7870   */\n      tag_226\n        /* \"#utility.yul\":7867:7868   */\n      0x00\n        /* \"#utility.yul\":7856:7865   */\n      dup4\n        /* \"#utility.yul\":7852:7869   */\n      add\n        /* \"#utility.yul\":7843:7849   */\n      dup7\n        /* \"#utility.yul\":7799:7870   */\n      tag_101\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":7880:7960   */\n      tag_227\n        /* \"#utility.yul\":7956:7958   */\n      0x20\n        /* \"#utility.yul\":7945:7954   */\n      dup4\n        /* \"#utility.yul\":7941:7959   */\n      add\n        /* \"#utility.yul\":7932:7938   */\n      dup6\n        /* \"#utility.yul\":7880:7960   */\n      tag_125\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":7970:8042   */\n      tag_228\n        /* \"#utility.yul\":8038:8040   */\n      0x40\n        /* \"#utility.yul\":8027:8036   */\n      dup4\n        /* \"#utility.yul\":8023:8041   */\n      add\n        /* \"#utility.yul\":8014:8020   */\n      dup5\n        /* \"#utility.yul\":7970:8042   */\n      tag_102\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":7591:8049   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8055:8198   */\n    tag_126:\n        /* \"#utility.yul\":8112:8117   */\n      0x00\n        /* \"#utility.yul\":8143:8149   */\n      dup2\n        /* \"#utility.yul\":8137:8150   */\n      mload\n        /* \"#utility.yul\":8128:8150   */\n      swap1\n      pop\n        /* \"#utility.yul\":8159:8192   */\n      tag_230\n        /* \"#utility.yul\":8186:8191   */\n      dup2\n        /* \"#utility.yul\":8159:8192   */\n      tag_106\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":8055:8198   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8204:8555   */\n    tag_53:\n        /* \"#utility.yul\":8274:8280   */\n      0x00\n        /* \"#utility.yul\":8323:8325   */\n      0x20\n        /* \"#utility.yul\":8311:8320   */\n      dup3\n        /* \"#utility.yul\":8302:8309   */\n      dup5\n        /* \"#utility.yul\":8298:8321   */\n      sub\n        /* \"#utility.yul\":8294:8326   */\n      slt\n        /* \"#utility.yul\":8291:8410   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":8329:8408   */\n      tag_233\n      tag_104\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":8291:8410   */\n    tag_232:\n        /* \"#utility.yul\":8449:8450   */\n      0x00\n        /* \"#utility.yul\":8474:8538   */\n      tag_234\n        /* \"#utility.yul\":8530:8537   */\n      dup5\n        /* \"#utility.yul\":8521:8527   */\n      dup3\n        /* \"#utility.yul\":8510:8519   */\n      dup6\n        /* \"#utility.yul\":8506:8528   */\n      add\n        /* \"#utility.yul\":8474:8538   */\n      tag_126\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":8464:8538   */\n      swap2\n      pop\n        /* \"#utility.yul\":8420:8548   */\n      pop\n        /* \"#utility.yul\":8204:8555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8561:8725   */\n    tag_127:\n        /* \"#utility.yul\":8701:8717   */\n      0x42616c616e6365206973206c6f77000000000000000000000000000000000000\n        /* \"#utility.yul\":8697:8698   */\n      0x00\n        /* \"#utility.yul\":8689:8695   */\n      dup3\n        /* \"#utility.yul\":8685:8699   */\n      add\n        /* \"#utility.yul\":8678:8718   */\n      mstore\n        /* \"#utility.yul\":8561:8725   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8731:9097   */\n    tag_128:\n        /* \"#utility.yul\":8873:8876   */\n      0x00\n        /* \"#utility.yul\":8894:8961   */\n      tag_237\n        /* \"#utility.yul\":8958:8960   */\n      0x0e\n        /* \"#utility.yul\":8953:8956   */\n      dup4\n        /* \"#utility.yul\":8894:8961   */\n      tag_116\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":8887:8961   */\n      swap2\n      pop\n        /* \"#utility.yul\":8970:9063   */\n      tag_238\n        /* \"#utility.yul\":9059:9062   */\n      dup3\n        /* \"#utility.yul\":8970:9063   */\n      tag_127\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":9088:9090   */\n      0x20\n        /* \"#utility.yul\":9083:9086   */\n      dup3\n        /* \"#utility.yul\":9079:9091   */\n      add\n        /* \"#utility.yul\":9072:9091   */\n      swap1\n      pop\n        /* \"#utility.yul\":8731:9097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9103:9522   */\n    tag_56:\n        /* \"#utility.yul\":9269:9273   */\n      0x00\n        /* \"#utility.yul\":9307:9309   */\n      0x20\n        /* \"#utility.yul\":9296:9305   */\n      dup3\n        /* \"#utility.yul\":9292:9310   */\n      add\n        /* \"#utility.yul\":9284:9310   */\n      swap1\n      pop\n        /* \"#utility.yul\":9356:9365   */\n      dup2\n        /* \"#utility.yul\":9350:9354   */\n      dup2\n        /* \"#utility.yul\":9346:9366   */\n      sub\n        /* \"#utility.yul\":9342:9343   */\n      0x00\n        /* \"#utility.yul\":9331:9340   */\n      dup4\n        /* \"#utility.yul\":9327:9344   */\n      add\n        /* \"#utility.yul\":9320:9367   */\n      mstore\n        /* \"#utility.yul\":9384:9515   */\n      tag_240\n        /* \"#utility.yul\":9510:9514   */\n      dup2\n        /* \"#utility.yul\":9384:9515   */\n      tag_128\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":9376:9515   */\n      swap1\n      pop\n        /* \"#utility.yul\":9103:9522   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9528:9970   */\n    tag_60:\n        /* \"#utility.yul\":9677:9681   */\n      0x00\n        /* \"#utility.yul\":9715:9717   */\n      0x60\n        /* \"#utility.yul\":9704:9713   */\n      dup3\n        /* \"#utility.yul\":9700:9718   */\n      add\n        /* \"#utility.yul\":9692:9718   */\n      swap1\n      pop\n        /* \"#utility.yul\":9728:9799   */\n      tag_242\n        /* \"#utility.yul\":9796:9797   */\n      0x00\n        /* \"#utility.yul\":9785:9794   */\n      dup4\n        /* \"#utility.yul\":9781:9798   */\n      add\n        /* \"#utility.yul\":9772:9778   */\n      dup7\n        /* \"#utility.yul\":9728:9799   */\n      tag_101\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":9809:9881   */\n      tag_243\n        /* \"#utility.yul\":9877:9879   */\n      0x20\n        /* \"#utility.yul\":9866:9875   */\n      dup4\n        /* \"#utility.yul\":9862:9880   */\n      add\n        /* \"#utility.yul\":9853:9859   */\n      dup6\n        /* \"#utility.yul\":9809:9881   */\n      tag_101\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":9891:9963   */\n      tag_244\n        /* \"#utility.yul\":9959:9961   */\n      0x40\n        /* \"#utility.yul\":9948:9957   */\n      dup4\n        /* \"#utility.yul\":9944:9962   */\n      add\n        /* \"#utility.yul\":9935:9941   */\n      dup5\n        /* \"#utility.yul\":9891:9963   */\n      tag_102\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":9528:9970   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9976:10066   */\n    tag_129:\n        /* \"#utility.yul\":10010:10017   */\n      0x00\n        /* \"#utility.yul\":10053:10058   */\n      dup2\n        /* \"#utility.yul\":10046:10059   */\n      iszero\n        /* \"#utility.yul\":10039:10060   */\n      iszero\n        /* \"#utility.yul\":10028:10060   */\n      swap1\n      pop\n        /* \"#utility.yul\":9976:10066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10072:10188   */\n    tag_130:\n        /* \"#utility.yul\":10142:10163   */\n      tag_247\n        /* \"#utility.yul\":10157:10162   */\n      dup2\n        /* \"#utility.yul\":10142:10163   */\n      tag_129\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":10135:10140   */\n      dup2\n        /* \"#utility.yul\":10132:10164   */\n      eq\n        /* \"#utility.yul\":10122:10182   */\n      tag_248\n      jumpi\n        /* \"#utility.yul\":10178:10179   */\n      0x00\n        /* \"#utility.yul\":10175:10176   */\n      dup1\n        /* \"#utility.yul\":10168:10180   */\n      revert\n        /* \"#utility.yul\":10122:10182   */\n    tag_248:\n        /* \"#utility.yul\":10072:10188   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10194:10331   */\n    tag_131:\n        /* \"#utility.yul\":10248:10253   */\n      0x00\n        /* \"#utility.yul\":10279:10285   */\n      dup2\n        /* \"#utility.yul\":10273:10286   */\n      mload\n        /* \"#utility.yul\":10264:10286   */\n      swap1\n      pop\n        /* \"#utility.yul\":10295:10325   */\n      tag_250\n        /* \"#utility.yul\":10319:10324   */\n      dup2\n        /* \"#utility.yul\":10295:10325   */\n      tag_130\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":10194:10331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10337:10682   */\n    tag_70:\n        /* \"#utility.yul\":10404:10410   */\n      0x00\n        /* \"#utility.yul\":10453:10455   */\n      0x20\n        /* \"#utility.yul\":10441:10450   */\n      dup3\n        /* \"#utility.yul\":10432:10439   */\n      dup5\n        /* \"#utility.yul\":10428:10451   */\n      sub\n        /* \"#utility.yul\":10424:10456   */\n      slt\n        /* \"#utility.yul\":10421:10540   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":10459:10538   */\n      tag_253\n      tag_104\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":10421:10540   */\n    tag_252:\n        /* \"#utility.yul\":10579:10580   */\n      0x00\n        /* \"#utility.yul\":10604:10665   */\n      tag_254\n        /* \"#utility.yul\":10657:10664   */\n      dup5\n        /* \"#utility.yul\":10648:10654   */\n      dup3\n        /* \"#utility.yul\":10637:10646   */\n      dup6\n        /* \"#utility.yul\":10633:10655   */\n      add\n        /* \"#utility.yul\":10604:10665   */\n      tag_131\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":10594:10665   */\n      swap2\n      pop\n        /* \"#utility.yul\":10550:10675   */\n      pop\n        /* \"#utility.yul\":10337:10682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10688:10786   */\n    tag_132:\n        /* \"#utility.yul\":10739:10745   */\n      0x00\n        /* \"#utility.yul\":10773:10778   */\n      dup2\n        /* \"#utility.yul\":10767:10779   */\n      mload\n        /* \"#utility.yul\":10757:10779   */\n      swap1\n      pop\n        /* \"#utility.yul\":10688:10786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10792:10939   */\n    tag_133:\n        /* \"#utility.yul\":10893:10904   */\n      0x00\n        /* \"#utility.yul\":10930:10933   */\n      dup2\n        /* \"#utility.yul\":10915:10933   */\n      swap1\n      pop\n        /* \"#utility.yul\":10792:10939   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10945:11084   */\n    tag_134:\n        /* \"#utility.yul\":11034:11040   */\n      dup3\n        /* \"#utility.yul\":11029:11032   */\n      dup2\n        /* \"#utility.yul\":11024:11027   */\n      dup4\n        /* \"#utility.yul\":11018:11041   */\n      mcopy\n        /* \"#utility.yul\":11075:11076   */\n      0x00\n        /* \"#utility.yul\":11066:11072   */\n      dup4\n        /* \"#utility.yul\":11061:11064   */\n      dup4\n        /* \"#utility.yul\":11057:11073   */\n      add\n        /* \"#utility.yul\":11050:11077   */\n      mstore\n        /* \"#utility.yul\":10945:11084   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11090:11476   */\n    tag_135:\n        /* \"#utility.yul\":11194:11197   */\n      0x00\n        /* \"#utility.yul\":11222:11260   */\n      tag_259\n        /* \"#utility.yul\":11254:11259   */\n      dup3\n        /* \"#utility.yul\":11222:11260   */\n      tag_132\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":11276:11364   */\n      tag_260\n        /* \"#utility.yul\":11357:11363   */\n      dup2\n        /* \"#utility.yul\":11352:11355   */\n      dup6\n        /* \"#utility.yul\":11276:11364   */\n      tag_133\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":11269:11364   */\n      swap4\n      pop\n        /* \"#utility.yul\":11373:11438   */\n      tag_261\n        /* \"#utility.yul\":11431:11437   */\n      dup2\n        /* \"#utility.yul\":11426:11429   */\n      dup6\n        /* \"#utility.yul\":11419:11423   */\n      0x20\n        /* \"#utility.yul\":11412:11417   */\n      dup7\n        /* \"#utility.yul\":11408:11424   */\n      add\n        /* \"#utility.yul\":11373:11438   */\n      tag_134\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":11463:11469   */\n      dup1\n        /* \"#utility.yul\":11458:11461   */\n      dup5\n        /* \"#utility.yul\":11454:11470   */\n      add\n        /* \"#utility.yul\":11447:11470   */\n      swap2\n      pop\n        /* \"#utility.yul\":11198:11476   */\n      pop\n        /* \"#utility.yul\":11090:11476   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11482:11753   */\n    tag_80:\n        /* \"#utility.yul\":11612:11615   */\n      0x00\n        /* \"#utility.yul\":11634:11727   */\n      tag_263\n        /* \"#utility.yul\":11723:11726   */\n      dup3\n        /* \"#utility.yul\":11714:11720   */\n      dup5\n        /* \"#utility.yul\":11634:11727   */\n      tag_135\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":11627:11727   */\n      swap2\n      pop\n        /* \"#utility.yul\":11744:11747   */\n      dup2\n        /* \"#utility.yul\":11737:11747   */\n      swap1\n      pop\n        /* \"#utility.yul\":11482:11753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204df055fae71f3039051bccbe05a3abef3a22bd8d70f10a241010d2a4a3e4871e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_699": {
									"entryPoint": null,
									"id": 699,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d3a8061005b5f395ff3fe608060405260043610610041575f3560e01c8062f714ce1461009d5780638da5cb5b146100c55780639db5dbe4146100ef578063b69ef8a81461011757610099565b36610099573460015f8282546100579190610787565b925050819055507ff1b03f708b9c39f453fe3f0cef84164c7d6f7df836df0796e1e9c2bce6ee397e333460405161008f929190610808565b60405180910390a1005b5f80fd5b3480156100a8575f80fd5b506100c360048036038101906100be9190610898565b610141565b005b3480156100d0575f80fd5b506100d96102ae565b6040516100e691906108d6565b60405180910390f35b3480156100fa575f80fd5b5061011560048036038101906101109190610954565b6102d1565b005b348015610122575f80fd5b5061012b610488565b60405161013891906109a4565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c590610a17565b60405180910390fd5b600154821115610213576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020a90610a7f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f19350505050158015610256573d5f803e3d5ffd5b508160015f8282546102689190610a9d565b925050819055507ffda3a3e0e1479b43cb1c701f7576187f4c4ad80768d627387e00184302f7d88e3382846040516102a293929190610b2b565b60405180910390a15050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035590610a17565b60405180910390fd5b5f8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161039891906108d6565b602060405180830381865afa1580156103b3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103d79190610b74565b90508082111561041c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041390610be9565b60405180910390fd5b61044783838673ffffffffffffffffffffffffffffffffffffffff1661048e9092919063ffffffff16565b7f03501c7341fda73ec7c804f841cec1d8d25a04b5a430589f0624026eb1cff37033848460405161047a93929190610c07565b60405180910390a150505050565b60015481565b610508838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016104c1929190610808565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061050d565b505050565b5f610537828473ffffffffffffffffffffffffffffffffffffffff166105a290919063ffffffff16565b90505f81511415801561055b5750808060200190518101906105599190610c71565b155b1561059d57826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161059491906108d6565b60405180910390fd5b505050565b60606105af83835f6105b7565b905092915050565b6060814710156105fe57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016105f591906108d6565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516106269190610cee565b5f6040518083038185875af1925050503d805f8114610660576040519150601f19603f3d011682016040523d82523d5f602084013e610665565b606091505b5091509150610675868383610680565b925050509392505050565b606082610695576106908261070d565b610705565b5f82511480156106bb57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156106fd57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016106f491906108d6565b60405180910390fd5b819050610706565b5b9392505050565b5f8151111561071f5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61079182610751565b915061079c83610751565b92508282019050808211156107b4576107b361075a565b5b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107e3826107ba565b9050919050565b6107f3816107d9565b82525050565b61080281610751565b82525050565b5f60408201905061081b5f8301856107ea565b61082860208301846107f9565b9392505050565b5f80fd5b61083c81610751565b8114610846575f80fd5b50565b5f8135905061085781610833565b92915050565b5f610867826107ba565b9050919050565b6108778161085d565b8114610881575f80fd5b50565b5f813590506108928161086e565b92915050565b5f80604083850312156108ae576108ad61082f565b5b5f6108bb85828601610849565b92505060206108cc85828601610884565b9150509250929050565b5f6020820190506108e95f8301846107ea565b92915050565b5f6108f9826107d9565b9050919050565b610909816108ef565b8114610913575f80fd5b50565b5f8135905061092481610900565b92915050565b610933816107d9565b811461093d575f80fd5b50565b5f8135905061094e8161092a565b92915050565b5f805f6060848603121561096b5761096a61082f565b5b5f61097886828701610916565b935050602061098986828701610940565b925050604061099a86828701610849565b9150509250925092565b5f6020820190506109b75f8301846107f9565b92915050565b5f82825260208201905092915050565b7f4f6e6c79206f776e65722063616e2077697468647261772066756e64730000005f82015250565b5f610a01601d836109bd565b9150610a0c826109cd565b602082019050919050565b5f6020820190508181035f830152610a2e816109f5565b9050919050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f610a696012836109bd565b9150610a7482610a35565b602082019050919050565b5f6020820190508181035f830152610a9681610a5d565b9050919050565b5f610aa782610751565b9150610ab283610751565b9250828203905081811115610aca57610ac961075a565b5b92915050565b5f819050919050565b5f610af3610aee610ae9846107ba565b610ad0565b6107ba565b9050919050565b5f610b0482610ad9565b9050919050565b5f610b1582610afa565b9050919050565b610b2581610b0b565b82525050565b5f606082019050610b3e5f8301866107ea565b610b4b6020830185610b1c565b610b5860408301846107f9565b949350505050565b5f81519050610b6e81610833565b92915050565b5f60208284031215610b8957610b8861082f565b5b5f610b9684828501610b60565b91505092915050565b7f42616c616e6365206973206c6f770000000000000000000000000000000000005f82015250565b5f610bd3600e836109bd565b9150610bde82610b9f565b602082019050919050565b5f6020820190508181035f830152610c0081610bc7565b9050919050565b5f606082019050610c1a5f8301866107ea565b610c2760208301856107ea565b610c3460408301846107f9565b949350505050565b5f8115159050919050565b610c5081610c3c565b8114610c5a575f80fd5b50565b5f81519050610c6b81610c47565b92915050565b5f60208284031215610c8657610c8561082f565b5b5f610c9384828501610c5d565b91505092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f610cc882610c9c565b610cd28185610ca6565b9350610ce2818560208601610cb0565b80840191505092915050565b5f610cf98284610cbe565b91508190509291505056fea26469706673582212204df055fae71f3039051bccbe05a3abef3a22bd8d70f10a241010d2a4a3e4871e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xD3A DUP1 PUSH2 0x5B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xF714CE EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x9DB5DBE4 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x117 JUMPI PUSH2 0x99 JUMP JUMPDEST CALLDATASIZE PUSH2 0x99 JUMPI CALLVALUE PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x787 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xF1B03F708B9C39F453FE3F0CEF84164C7D6F7DF836DF0796E1E9C2BCE6EE397E CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x8F SWAP3 SWAP2 SWAP1 PUSH2 0x808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x898 JUMP JUMPDEST PUSH2 0x141 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C5 SWAP1 PUSH2 0xA17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP3 GT ISZERO PUSH2 0x213 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20A SWAP1 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x256 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP2 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0xA9D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xFDA3A3E0E1479B43CB1C701F7576187F4C4AD80768D627387E00184302F7D88E CALLER DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x35E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x355 SWAP1 PUSH2 0xA17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x413 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x447 DUP4 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x48E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x3501C7341FDA73EC7C804F841CEC1D8D25A04B5A430589F0624026EB1CFF370 CALLER DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x47A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x508 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4C1 SWAP3 SWAP2 SWAP1 PUSH2 0x808 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x50D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x537 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5A2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x55B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x559 SWAP2 SWAP1 PUSH2 0xC71 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x59D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5AF DUP4 DUP4 PUSH0 PUSH2 0x5B7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x5FE JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x626 SWAP2 SWAP1 PUSH2 0xCEE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x660 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x665 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x675 DUP7 DUP4 DUP4 PUSH2 0x680 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x695 JUMPI PUSH2 0x690 DUP3 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x705 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x6BB JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x6FD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x706 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x71F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x791 DUP3 PUSH2 0x751 JUMP JUMPDEST SWAP2 POP PUSH2 0x79C DUP4 PUSH2 0x751 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x7B4 JUMPI PUSH2 0x7B3 PUSH2 0x75A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7E3 DUP3 PUSH2 0x7BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F3 DUP2 PUSH2 0x7D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x802 DUP2 PUSH2 0x751 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x81B PUSH0 DUP4 ADD DUP6 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x828 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7F9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x83C DUP2 PUSH2 0x751 JUMP JUMPDEST DUP2 EQ PUSH2 0x846 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x857 DUP2 PUSH2 0x833 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x867 DUP3 PUSH2 0x7BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x877 DUP2 PUSH2 0x85D JUMP JUMPDEST DUP2 EQ PUSH2 0x881 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x892 DUP2 PUSH2 0x86E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8AE JUMPI PUSH2 0x8AD PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8BB DUP6 DUP3 DUP7 ADD PUSH2 0x849 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8CC DUP6 DUP3 DUP7 ADD PUSH2 0x884 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8E9 PUSH0 DUP4 ADD DUP5 PUSH2 0x7EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8F9 DUP3 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x909 DUP2 PUSH2 0x8EF JUMP JUMPDEST DUP2 EQ PUSH2 0x913 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x924 DUP2 PUSH2 0x900 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x933 DUP2 PUSH2 0x7D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x93D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x94E DUP2 PUSH2 0x92A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x96B JUMPI PUSH2 0x96A PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x978 DUP7 DUP3 DUP8 ADD PUSH2 0x916 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x989 DUP7 DUP3 DUP8 ADD PUSH2 0x940 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x99A DUP7 DUP3 DUP8 ADD PUSH2 0x849 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x7F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2077697468647261772066756E6473000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA01 PUSH1 0x1D DUP4 PUSH2 0x9BD JUMP JUMPDEST SWAP2 POP PUSH2 0xA0C DUP3 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA2E DUP2 PUSH2 0x9F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA69 PUSH1 0x12 DUP4 PUSH2 0x9BD JUMP JUMPDEST SWAP2 POP PUSH2 0xA74 DUP3 PUSH2 0xA35 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA96 DUP2 PUSH2 0xA5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA7 DUP3 PUSH2 0x751 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB2 DUP4 PUSH2 0x751 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xACA JUMPI PUSH2 0xAC9 PUSH2 0x75A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAF3 PUSH2 0xAEE PUSH2 0xAE9 DUP5 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x7BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB04 DUP3 PUSH2 0xAD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB15 DUP3 PUSH2 0xAFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB25 DUP2 PUSH2 0xB0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB3E PUSH0 DUP4 ADD DUP7 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0xB4B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB1C JUMP JUMPDEST PUSH2 0xB58 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x7F9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB6E DUP2 PUSH2 0x833 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB89 JUMPI PUSH2 0xB88 PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB96 DUP5 DUP3 DUP6 ADD PUSH2 0xB60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x42616C616E6365206973206C6F77000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBD3 PUSH1 0xE DUP4 PUSH2 0x9BD JUMP JUMPDEST SWAP2 POP PUSH2 0xBDE DUP3 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC00 DUP2 PUSH2 0xBC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC1A PUSH0 DUP4 ADD DUP7 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0xC27 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0xC34 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x7F9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC50 DUP2 PUSH2 0xC3C JUMP JUMPDEST DUP2 EQ PUSH2 0xC5A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC6B DUP2 PUSH2 0xC47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC86 JUMPI PUSH2 0xC85 PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC93 DUP5 DUP3 DUP6 ADD PUSH2 0xC5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCC8 DUP3 PUSH2 0xC9C JUMP JUMPDEST PUSH2 0xCD2 DUP2 DUP6 PUSH2 0xCA6 JUMP JUMPDEST SWAP4 POP PUSH2 0xCE2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xCB0 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCF9 DUP3 DUP5 PUSH2 0xCBE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D CREATE SSTORE STATICCALL 0xE7 0x1F ADDRESS CODECOPY SDIV SHL 0xCC 0xBE SDIV LOG3 0xAB 0xEF GASPRICE 0x22 0xBD DUP14 PUSH17 0xF10A241010D2A4A3E4871E64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "218:1343:4:-:0;;;551:51;;;;;;;;;;584:10;576:5;;:18;;;;;;;;;;;;;;;;;;218:1343;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_715": {
									"entryPoint": null,
									"id": 715,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_353": {
									"entryPoint": 1293,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_655": {
									"entryPoint": 1805,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balance_668": {
									"entryPoint": 1160,
									"id": 668,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_523": {
									"entryPoint": 1463,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_477": {
									"entryPoint": 1442,
									"id": 477,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_666": {
									"entryPoint": 686,
									"id": 666,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_163": {
									"entryPoint": 1166,
									"id": 163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferERC20_805": {
									"entryPoint": 721,
									"id": 805,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_615": {
									"entryPoint": 1664,
									"id": 615,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_755": {
									"entryPoint": 321,
									"id": 755,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 2180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$77": {
									"entryPoint": 2326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$77t_addresst_uint256": {
									"entryPoint": 2388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_payable": {
									"entryPoint": 2200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_payable_to_t_address_fromStack": {
									"entryPoint": 2844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_36b9982a87fc35dcce21cd7c9fe5259f8195356730e6a709672932073665fac0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c43fd0ca3947cf871eff184fdae3f2d339f1548be2649c2b62c42e0f6a3bc3af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2859,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2056,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36b9982a87fc35dcce21cd7c9fe5259f8195356730e6a709672932073665fac0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c43fd0ca3947cf871eff184fdae3f2d339f1548be2649c2b62c42e0f6a3bc3af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 2141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$77": {
									"entryPoint": 2287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_address_payable_to_t_address": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3248,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1882,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2095,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_36b9982a87fc35dcce21cd7c9fe5259f8195356730e6a709672932073665fac0": {
									"entryPoint": 2509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d": {
									"entryPoint": 2613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c43fd0ca3947cf871eff184fdae3f2d339f1548be2649c2b62c42e0f6a3bc3af": {
									"entryPoint": 2975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$77": {
									"entryPoint": 2304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11756:5",
										"nodeType": "YulBlock",
										"src": "0:11756:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:5",
													"nodeType": "YulBlock",
													"src": "52:32:5",
													"statements": [
														{
															"nativeSrc": "62:16:5",
															"nodeType": "YulAssignment",
															"src": "62:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:5",
																"nodeType": "YulIdentifier",
																"src": "73:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:5",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:5",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:77:5"
											},
											{
												"body": {
													"nativeSrc": "118:152:5",
													"nodeType": "YulBlock",
													"src": "118:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "135:1:5",
																		"nodeType": "YulLiteral",
																		"src": "135:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "138:77:5",
																		"nodeType": "YulLiteral",
																		"src": "138:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "128:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:5"
																},
																"nativeSrc": "128:88:5",
																"nodeType": "YulFunctionCall",
																"src": "128:88:5"
															},
															"nativeSrc": "128:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "128:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "232:1:5",
																		"nodeType": "YulLiteral",
																		"src": "232:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "235:4:5",
																		"nodeType": "YulLiteral",
																		"src": "235:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "225:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:5"
																},
																"nativeSrc": "225:15:5",
																"nodeType": "YulFunctionCall",
																"src": "225:15:5"
															},
															"nativeSrc": "225:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "225:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "256:1:5",
																		"nodeType": "YulLiteral",
																		"src": "256:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "259:4:5",
																		"nodeType": "YulLiteral",
																		"src": "259:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "249:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:5"
																},
																"nativeSrc": "249:15:5",
																"nodeType": "YulFunctionCall",
																"src": "249:15:5"
															},
															"nativeSrc": "249:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "249:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "90:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:5"
											},
											{
												"body": {
													"nativeSrc": "320:147:5",
													"nodeType": "YulBlock",
													"src": "320:147:5",
													"statements": [
														{
															"nativeSrc": "330:25:5",
															"nodeType": "YulAssignment",
															"src": "330:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "353:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "353:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "335:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "335:17:5"
																},
																"nativeSrc": "335:20:5",
																"nodeType": "YulFunctionCall",
																"src": "335:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "330:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "330:1:5"
																}
															]
														},
														{
															"nativeSrc": "364:25:5",
															"nodeType": "YulAssignment",
															"src": "364:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "387:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "387:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "369:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "369:17:5"
																},
																"nativeSrc": "369:20:5",
																"nodeType": "YulFunctionCall",
																"src": "369:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "364:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "364:1:5"
																}
															]
														},
														{
															"nativeSrc": "398:16:5",
															"nodeType": "YulAssignment",
															"src": "398:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "409:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "409:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "412:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "412:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "405:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "405:3:5"
																},
																"nativeSrc": "405:9:5",
																"nodeType": "YulFunctionCall",
																"src": "405:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "398:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "438:22:5",
																"nodeType": "YulBlock",
																"src": "438:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "440:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "440:16:5"
																			},
																			"nativeSrc": "440:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "440:18:5"
																		},
																		"nativeSrc": "440:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "440:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "430:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "430:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "433:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "433:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "427:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "427:2:5"
																},
																"nativeSrc": "427:10:5",
																"nodeType": "YulFunctionCall",
																"src": "427:10:5"
															},
															"nativeSrc": "424:36:5",
															"nodeType": "YulIf",
															"src": "424:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "276:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "307:1:5",
														"nodeType": "YulTypedName",
														"src": "307:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "310:1:5",
														"nodeType": "YulTypedName",
														"src": "310:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "316:3:5",
														"nodeType": "YulTypedName",
														"src": "316:3:5",
														"type": ""
													}
												],
												"src": "276:191:5"
											},
											{
												"body": {
													"nativeSrc": "518:81:5",
													"nodeType": "YulBlock",
													"src": "518:81:5",
													"statements": [
														{
															"nativeSrc": "528:65:5",
															"nodeType": "YulAssignment",
															"src": "528:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "543:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "543:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "550:42:5",
																		"nodeType": "YulLiteral",
																		"src": "550:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "539:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "539:3:5"
																},
																"nativeSrc": "539:54:5",
																"nodeType": "YulFunctionCall",
																"src": "539:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "528:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "528:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "473:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "500:5:5",
														"nodeType": "YulTypedName",
														"src": "500:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "510:7:5",
														"nodeType": "YulTypedName",
														"src": "510:7:5",
														"type": ""
													}
												],
												"src": "473:126:5"
											},
											{
												"body": {
													"nativeSrc": "650:51:5",
													"nodeType": "YulBlock",
													"src": "650:51:5",
													"statements": [
														{
															"nativeSrc": "660:35:5",
															"nodeType": "YulAssignment",
															"src": "660:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "671:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "671:17:5"
																},
																"nativeSrc": "671:24:5",
																"nodeType": "YulFunctionCall",
																"src": "671:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "660:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "660:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "605:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "632:5:5",
														"nodeType": "YulTypedName",
														"src": "632:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "642:7:5",
														"nodeType": "YulTypedName",
														"src": "642:7:5",
														"type": ""
													}
												],
												"src": "605:96:5"
											},
											{
												"body": {
													"nativeSrc": "772:53:5",
													"nodeType": "YulBlock",
													"src": "772:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "789:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "789:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "812:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "812:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "794:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "794:17:5"
																		},
																		"nativeSrc": "794:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "794:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "782:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "782:6:5"
																},
																"nativeSrc": "782:37:5",
																"nodeType": "YulFunctionCall",
																"src": "782:37:5"
															},
															"nativeSrc": "782:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "782:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "707:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "760:5:5",
														"nodeType": "YulTypedName",
														"src": "760:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "767:3:5",
														"nodeType": "YulTypedName",
														"src": "767:3:5",
														"type": ""
													}
												],
												"src": "707:118:5"
											},
											{
												"body": {
													"nativeSrc": "896:53:5",
													"nodeType": "YulBlock",
													"src": "896:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "913:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "913:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "936:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "936:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "918:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "918:17:5"
																		},
																		"nativeSrc": "918:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "918:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "906:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "906:6:5"
																},
																"nativeSrc": "906:37:5",
																"nodeType": "YulFunctionCall",
																"src": "906:37:5"
															},
															"nativeSrc": "906:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "906:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "831:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "884:5:5",
														"nodeType": "YulTypedName",
														"src": "884:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "891:3:5",
														"nodeType": "YulTypedName",
														"src": "891:3:5",
														"type": ""
													}
												],
												"src": "831:118:5"
											},
											{
												"body": {
													"nativeSrc": "1081:206:5",
													"nodeType": "YulBlock",
													"src": "1081:206:5",
													"statements": [
														{
															"nativeSrc": "1091:26:5",
															"nodeType": "YulAssignment",
															"src": "1091:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1103:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1103:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1114:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1114:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1099:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1099:3:5"
																},
																"nativeSrc": "1099:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1099:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1091:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1091:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1171:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1171:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1184:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1195:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1195:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1180:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1180:3:5"
																		},
																		"nativeSrc": "1180:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1180:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1127:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1127:43:5"
																},
																"nativeSrc": "1127:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1127:71:5"
															},
															"nativeSrc": "1127:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1127:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1252:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1252:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1265:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1265:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1276:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1276:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1261:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1261:3:5"
																		},
																		"nativeSrc": "1261:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1261:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1208:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1208:43:5"
																},
																"nativeSrc": "1208:72:5",
																"nodeType": "YulFunctionCall",
																"src": "1208:72:5"
															},
															"nativeSrc": "1208:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "1208:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "955:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1045:9:5",
														"nodeType": "YulTypedName",
														"src": "1045:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1057:6:5",
														"nodeType": "YulTypedName",
														"src": "1057:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1065:6:5",
														"nodeType": "YulTypedName",
														"src": "1065:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1076:4:5",
														"nodeType": "YulTypedName",
														"src": "1076:4:5",
														"type": ""
													}
												],
												"src": "955:332:5"
											},
											{
												"body": {
													"nativeSrc": "1333:35:5",
													"nodeType": "YulBlock",
													"src": "1333:35:5",
													"statements": [
														{
															"nativeSrc": "1343:19:5",
															"nodeType": "YulAssignment",
															"src": "1343:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1359:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1359:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1353:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1353:5:5"
																},
																"nativeSrc": "1353:9:5",
																"nodeType": "YulFunctionCall",
																"src": "1353:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1343:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1343:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1293:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1326:6:5",
														"nodeType": "YulTypedName",
														"src": "1326:6:5",
														"type": ""
													}
												],
												"src": "1293:75:5"
											},
											{
												"body": {
													"nativeSrc": "1463:28:5",
													"nodeType": "YulBlock",
													"src": "1463:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1480:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1480:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1483:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1483:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1473:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1473:6:5"
																},
																"nativeSrc": "1473:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1473:12:5"
															},
															"nativeSrc": "1473:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1473:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1374:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1374:117:5"
											},
											{
												"body": {
													"nativeSrc": "1586:28:5",
													"nodeType": "YulBlock",
													"src": "1586:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1603:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1606:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1606:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1596:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1596:6:5"
																},
																"nativeSrc": "1596:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1596:12:5"
															},
															"nativeSrc": "1596:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1596:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1497:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1497:117:5"
											},
											{
												"body": {
													"nativeSrc": "1663:79:5",
													"nodeType": "YulBlock",
													"src": "1663:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1720:16:5",
																"nodeType": "YulBlock",
																"src": "1720:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1729:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1729:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1732:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1732:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1722:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1722:6:5"
																			},
																			"nativeSrc": "1722:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1722:12:5"
																		},
																		"nativeSrc": "1722:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1722:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1686:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1686:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1711:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1711:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1693:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1693:17:5"
																				},
																				"nativeSrc": "1693:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1693:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1683:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1683:2:5"
																		},
																		"nativeSrc": "1683:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1683:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1676:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:5"
																},
																"nativeSrc": "1676:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1676:43:5"
															},
															"nativeSrc": "1673:63:5",
															"nodeType": "YulIf",
															"src": "1673:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1620:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1656:5:5",
														"nodeType": "YulTypedName",
														"src": "1656:5:5",
														"type": ""
													}
												],
												"src": "1620:122:5"
											},
											{
												"body": {
													"nativeSrc": "1800:87:5",
													"nodeType": "YulBlock",
													"src": "1800:87:5",
													"statements": [
														{
															"nativeSrc": "1810:29:5",
															"nodeType": "YulAssignment",
															"src": "1810:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1832:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1832:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1819:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1819:12:5"
																},
																"nativeSrc": "1819:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1819:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1810:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1810:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1875:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1875:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1848:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1848:26:5"
																},
																"nativeSrc": "1848:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1848:33:5"
															},
															"nativeSrc": "1848:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1848:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1748:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1778:6:5",
														"nodeType": "YulTypedName",
														"src": "1778:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1786:3:5",
														"nodeType": "YulTypedName",
														"src": "1786:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1794:5:5",
														"nodeType": "YulTypedName",
														"src": "1794:5:5",
														"type": ""
													}
												],
												"src": "1748:139:5"
											},
											{
												"body": {
													"nativeSrc": "1946:51:5",
													"nodeType": "YulBlock",
													"src": "1946:51:5",
													"statements": [
														{
															"nativeSrc": "1956:35:5",
															"nodeType": "YulAssignment",
															"src": "1956:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1985:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1985:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1967:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1967:17:5"
																},
																"nativeSrc": "1967:24:5",
																"nodeType": "YulFunctionCall",
																"src": "1967:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1956:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1956:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "1893:104:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1928:5:5",
														"nodeType": "YulTypedName",
														"src": "1928:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1938:7:5",
														"nodeType": "YulTypedName",
														"src": "1938:7:5",
														"type": ""
													}
												],
												"src": "1893:104:5"
											},
											{
												"body": {
													"nativeSrc": "2054:87:5",
													"nodeType": "YulBlock",
													"src": "2054:87:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2119:16:5",
																"nodeType": "YulBlock",
																"src": "2119:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2128:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2128:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2131:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2131:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2121:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2121:6:5"
																			},
																			"nativeSrc": "2121:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2121:12:5"
																		},
																		"nativeSrc": "2121:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2121:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2077:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2077:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2110:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2110:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "2084:25:5",
																					"nodeType": "YulIdentifier",
																					"src": "2084:25:5"
																				},
																				"nativeSrc": "2084:32:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2084:32:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2074:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2074:2:5"
																		},
																		"nativeSrc": "2074:43:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2074:43:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2067:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2067:6:5"
																},
																"nativeSrc": "2067:51:5",
																"nodeType": "YulFunctionCall",
																"src": "2067:51:5"
															},
															"nativeSrc": "2064:71:5",
															"nodeType": "YulIf",
															"src": "2064:71:5"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "2003:138:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2047:5:5",
														"nodeType": "YulTypedName",
														"src": "2047:5:5",
														"type": ""
													}
												],
												"src": "2003:138:5"
											},
											{
												"body": {
													"nativeSrc": "2207:95:5",
													"nodeType": "YulBlock",
													"src": "2207:95:5",
													"statements": [
														{
															"nativeSrc": "2217:29:5",
															"nodeType": "YulAssignment",
															"src": "2217:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2239:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2239:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2226:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2226:12:5"
																},
																"nativeSrc": "2226:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2226:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2217:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2217:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2290:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2290:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "2255:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "2255:34:5"
																},
																"nativeSrc": "2255:41:5",
																"nodeType": "YulFunctionCall",
																"src": "2255:41:5"
															},
															"nativeSrc": "2255:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "2255:41:5"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "2147:155:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2185:6:5",
														"nodeType": "YulTypedName",
														"src": "2185:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2193:3:5",
														"nodeType": "YulTypedName",
														"src": "2193:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2201:5:5",
														"nodeType": "YulTypedName",
														"src": "2201:5:5",
														"type": ""
													}
												],
												"src": "2147:155:5"
											},
											{
												"body": {
													"nativeSrc": "2399:399:5",
													"nodeType": "YulBlock",
													"src": "2399:399:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2445:83:5",
																"nodeType": "YulBlock",
																"src": "2445:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2447:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2447:77:5"
																			},
																			"nativeSrc": "2447:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2447:79:5"
																		},
																		"nativeSrc": "2447:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2447:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2420:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2420:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2429:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2429:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2416:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2416:3:5"
																		},
																		"nativeSrc": "2416:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2416:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2441:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2441:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2412:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2412:3:5"
																},
																"nativeSrc": "2412:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2412:32:5"
															},
															"nativeSrc": "2409:119:5",
															"nodeType": "YulIf",
															"src": "2409:119:5"
														},
														{
															"nativeSrc": "2538:117:5",
															"nodeType": "YulBlock",
															"src": "2538:117:5",
															"statements": [
																{
																	"nativeSrc": "2553:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2553:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2567:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2567:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2557:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2557:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2582:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2582:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2617:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2617:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2628:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2628:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2613:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2613:3:5"
																				},
																				"nativeSrc": "2613:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2613:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2637:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2637:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2592:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2592:20:5"
																		},
																		"nativeSrc": "2592:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2592:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2582:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2582:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2665:126:5",
															"nodeType": "YulBlock",
															"src": "2665:126:5",
															"statements": [
																{
																	"nativeSrc": "2680:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2680:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2694:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2694:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2684:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2684:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2710:71:5",
																	"nodeType": "YulAssignment",
																	"src": "2710:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2753:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2753:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2764:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2764:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2749:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2749:3:5"
																				},
																				"nativeSrc": "2749:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2749:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2773:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2773:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "2720:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "2720:28:5"
																		},
																		"nativeSrc": "2720:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2720:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2710:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2710:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_payable",
												"nativeSrc": "2308:490:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2361:9:5",
														"nodeType": "YulTypedName",
														"src": "2361:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2372:7:5",
														"nodeType": "YulTypedName",
														"src": "2372:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2384:6:5",
														"nodeType": "YulTypedName",
														"src": "2384:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2392:6:5",
														"nodeType": "YulTypedName",
														"src": "2392:6:5",
														"type": ""
													}
												],
												"src": "2308:490:5"
											},
											{
												"body": {
													"nativeSrc": "2902:124:5",
													"nodeType": "YulBlock",
													"src": "2902:124:5",
													"statements": [
														{
															"nativeSrc": "2912:26:5",
															"nodeType": "YulAssignment",
															"src": "2912:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2924:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2924:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2935:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2935:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2920:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2920:3:5"
																},
																"nativeSrc": "2920:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2920:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2912:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2912:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2992:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2992:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3005:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3005:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3016:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3016:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3001:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3001:3:5"
																		},
																		"nativeSrc": "3001:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3001:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2948:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2948:43:5"
																},
																"nativeSrc": "2948:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2948:71:5"
															},
															"nativeSrc": "2948:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2948:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2804:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2874:9:5",
														"nodeType": "YulTypedName",
														"src": "2874:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2886:6:5",
														"nodeType": "YulTypedName",
														"src": "2886:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2897:4:5",
														"nodeType": "YulTypedName",
														"src": "2897:4:5",
														"type": ""
													}
												],
												"src": "2804:222:5"
											},
											{
												"body": {
													"nativeSrc": "3090:51:5",
													"nodeType": "YulBlock",
													"src": "3090:51:5",
													"statements": [
														{
															"nativeSrc": "3100:35:5",
															"nodeType": "YulAssignment",
															"src": "3100:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3129:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3129:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "3111:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "3111:17:5"
																},
																"nativeSrc": "3111:24:5",
																"nodeType": "YulFunctionCall",
																"src": "3111:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3100:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3100:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$77",
												"nativeSrc": "3032:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3072:5:5",
														"nodeType": "YulTypedName",
														"src": "3072:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3082:7:5",
														"nodeType": "YulTypedName",
														"src": "3082:7:5",
														"type": ""
													}
												],
												"src": "3032:109:5"
											},
											{
												"body": {
													"nativeSrc": "3203:92:5",
													"nodeType": "YulBlock",
													"src": "3203:92:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3273:16:5",
																"nodeType": "YulBlock",
																"src": "3273:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3282:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3282:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3285:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3285:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3275:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3275:6:5"
																			},
																			"nativeSrc": "3275:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3275:12:5"
																		},
																		"nativeSrc": "3275:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3275:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3226:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3226:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3264:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3264:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$77",
																					"nativeSrc": "3233:30:5",
																					"nodeType": "YulIdentifier",
																					"src": "3233:30:5"
																				},
																				"nativeSrc": "3233:37:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3233:37:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3223:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "3223:2:5"
																		},
																		"nativeSrc": "3223:48:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3223:48:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3216:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3216:6:5"
																},
																"nativeSrc": "3216:56:5",
																"nodeType": "YulFunctionCall",
																"src": "3216:56:5"
															},
															"nativeSrc": "3213:76:5",
															"nodeType": "YulIf",
															"src": "3213:76:5"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$77",
												"nativeSrc": "3147:148:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3196:5:5",
														"nodeType": "YulTypedName",
														"src": "3196:5:5",
														"type": ""
													}
												],
												"src": "3147:148:5"
											},
											{
												"body": {
													"nativeSrc": "3366:100:5",
													"nodeType": "YulBlock",
													"src": "3366:100:5",
													"statements": [
														{
															"nativeSrc": "3376:29:5",
															"nodeType": "YulAssignment",
															"src": "3376:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3398:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3398:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3385:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3385:12:5"
																},
																"nativeSrc": "3385:20:5",
																"nodeType": "YulFunctionCall",
																"src": "3385:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3376:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3376:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3454:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3454:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$77",
																	"nativeSrc": "3414:39:5",
																	"nodeType": "YulIdentifier",
																	"src": "3414:39:5"
																},
																"nativeSrc": "3414:46:5",
																"nodeType": "YulFunctionCall",
																"src": "3414:46:5"
															},
															"nativeSrc": "3414:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "3414:46:5"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$77",
												"nativeSrc": "3301:165:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3344:6:5",
														"nodeType": "YulTypedName",
														"src": "3344:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3352:3:5",
														"nodeType": "YulTypedName",
														"src": "3352:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3360:5:5",
														"nodeType": "YulTypedName",
														"src": "3360:5:5",
														"type": ""
													}
												],
												"src": "3301:165:5"
											},
											{
												"body": {
													"nativeSrc": "3515:79:5",
													"nodeType": "YulBlock",
													"src": "3515:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3572:16:5",
																"nodeType": "YulBlock",
																"src": "3572:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3581:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3581:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3584:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3584:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3574:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3574:6:5"
																			},
																			"nativeSrc": "3574:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3574:12:5"
																		},
																		"nativeSrc": "3574:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3574:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3538:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3538:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3563:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3563:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3545:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "3545:17:5"
																				},
																				"nativeSrc": "3545:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3545:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3535:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "3535:2:5"
																		},
																		"nativeSrc": "3535:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3535:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3528:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3528:6:5"
																},
																"nativeSrc": "3528:43:5",
																"nodeType": "YulFunctionCall",
																"src": "3528:43:5"
															},
															"nativeSrc": "3525:63:5",
															"nodeType": "YulIf",
															"src": "3525:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3472:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3508:5:5",
														"nodeType": "YulTypedName",
														"src": "3508:5:5",
														"type": ""
													}
												],
												"src": "3472:122:5"
											},
											{
												"body": {
													"nativeSrc": "3652:87:5",
													"nodeType": "YulBlock",
													"src": "3652:87:5",
													"statements": [
														{
															"nativeSrc": "3662:29:5",
															"nodeType": "YulAssignment",
															"src": "3662:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3684:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3684:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3671:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3671:12:5"
																},
																"nativeSrc": "3671:20:5",
																"nodeType": "YulFunctionCall",
																"src": "3671:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3662:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3662:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3727:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3727:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3700:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "3700:26:5"
																},
																"nativeSrc": "3700:33:5",
																"nodeType": "YulFunctionCall",
																"src": "3700:33:5"
															},
															"nativeSrc": "3700:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "3700:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3600:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3630:6:5",
														"nodeType": "YulTypedName",
														"src": "3630:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3638:3:5",
														"nodeType": "YulTypedName",
														"src": "3638:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3646:5:5",
														"nodeType": "YulTypedName",
														"src": "3646:5:5",
														"type": ""
													}
												],
												"src": "3600:139:5"
											},
											{
												"body": {
													"nativeSrc": "3858:532:5",
													"nodeType": "YulBlock",
													"src": "3858:532:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3904:83:5",
																"nodeType": "YulBlock",
																"src": "3904:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3906:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3906:77:5"
																			},
																			"nativeSrc": "3906:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3906:79:5"
																		},
																		"nativeSrc": "3906:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3906:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3879:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3879:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3888:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3888:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3875:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3875:3:5"
																		},
																		"nativeSrc": "3875:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3875:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3900:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3900:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3871:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:5"
																},
																"nativeSrc": "3871:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3871:32:5"
															},
															"nativeSrc": "3868:119:5",
															"nodeType": "YulIf",
															"src": "3868:119:5"
														},
														{
															"nativeSrc": "3997:130:5",
															"nodeType": "YulBlock",
															"src": "3997:130:5",
															"statements": [
																{
																	"nativeSrc": "4012:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4012:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4026:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4026:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4016:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4016:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4041:76:5",
																	"nodeType": "YulAssignment",
																	"src": "4041:76:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4089:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4089:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4100:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4100:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4085:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4085:3:5"
																				},
																				"nativeSrc": "4085:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4085:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4109:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4109:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$77",
																			"nativeSrc": "4051:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4051:33:5"
																		},
																		"nativeSrc": "4051:66:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4051:66:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4041:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4041:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4137:118:5",
															"nodeType": "YulBlock",
															"src": "4137:118:5",
															"statements": [
																{
																	"nativeSrc": "4152:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4152:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4166:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4166:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4156:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4156:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4182:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4182:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4217:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4217:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4228:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4228:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4213:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4213:3:5"
																				},
																				"nativeSrc": "4213:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4213:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4237:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4237:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4192:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4192:20:5"
																		},
																		"nativeSrc": "4192:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4192:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4182:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4182:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4265:118:5",
															"nodeType": "YulBlock",
															"src": "4265:118:5",
															"statements": [
																{
																	"nativeSrc": "4280:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4294:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4310:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4310:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4345:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4345:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4356:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4356:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4341:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4341:3:5"
																				},
																				"nativeSrc": "4341:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4341:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4365:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4365:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4320:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4320:20:5"
																		},
																		"nativeSrc": "4320:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4320:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4310:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4310:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$77t_addresst_uint256",
												"nativeSrc": "3745:645:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3812:9:5",
														"nodeType": "YulTypedName",
														"src": "3812:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3823:7:5",
														"nodeType": "YulTypedName",
														"src": "3823:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3835:6:5",
														"nodeType": "YulTypedName",
														"src": "3835:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3843:6:5",
														"nodeType": "YulTypedName",
														"src": "3843:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3851:6:5",
														"nodeType": "YulTypedName",
														"src": "3851:6:5",
														"type": ""
													}
												],
												"src": "3745:645:5"
											},
											{
												"body": {
													"nativeSrc": "4494:124:5",
													"nodeType": "YulBlock",
													"src": "4494:124:5",
													"statements": [
														{
															"nativeSrc": "4504:26:5",
															"nodeType": "YulAssignment",
															"src": "4504:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4516:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4516:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4527:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4527:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4512:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4512:3:5"
																},
																"nativeSrc": "4512:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4512:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4504:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4504:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4584:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4584:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4597:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4597:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4608:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4608:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4593:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4593:3:5"
																		},
																		"nativeSrc": "4593:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4593:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4540:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4540:43:5"
																},
																"nativeSrc": "4540:71:5",
																"nodeType": "YulFunctionCall",
																"src": "4540:71:5"
															},
															"nativeSrc": "4540:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "4540:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4396:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4466:9:5",
														"nodeType": "YulTypedName",
														"src": "4466:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4478:6:5",
														"nodeType": "YulTypedName",
														"src": "4478:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4489:4:5",
														"nodeType": "YulTypedName",
														"src": "4489:4:5",
														"type": ""
													}
												],
												"src": "4396:222:5"
											},
											{
												"body": {
													"nativeSrc": "4720:73:5",
													"nodeType": "YulBlock",
													"src": "4720:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4737:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4737:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4742:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4742:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4730:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4730:6:5"
																},
																"nativeSrc": "4730:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4730:19:5"
															},
															"nativeSrc": "4730:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "4730:19:5"
														},
														{
															"nativeSrc": "4758:29:5",
															"nodeType": "YulAssignment",
															"src": "4758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4777:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4777:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4782:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4782:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4773:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4773:3:5"
																},
																"nativeSrc": "4773:14:5",
																"nodeType": "YulFunctionCall",
																"src": "4773:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4758:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "4758:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4624:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4692:3:5",
														"nodeType": "YulTypedName",
														"src": "4692:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4697:6:5",
														"nodeType": "YulTypedName",
														"src": "4697:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4708:11:5",
														"nodeType": "YulTypedName",
														"src": "4708:11:5",
														"type": ""
													}
												],
												"src": "4624:169:5"
											},
											{
												"body": {
													"nativeSrc": "4905:73:5",
													"nodeType": "YulBlock",
													"src": "4905:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4927:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4927:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4935:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4935:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4923:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:5"
																		},
																		"nativeSrc": "4923:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4923:14:5"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e2077697468647261772066756e6473",
																		"kind": "string",
																		"nativeSrc": "4939:31:5",
																		"nodeType": "YulLiteral",
																		"src": "4939:31:5",
																		"type": "",
																		"value": "Only owner can withdraw funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4916:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:5"
																},
																"nativeSrc": "4916:55:5",
																"nodeType": "YulFunctionCall",
																"src": "4916:55:5"
															},
															"nativeSrc": "4916:55:5",
															"nodeType": "YulExpressionStatement",
															"src": "4916:55:5"
														}
													]
												},
												"name": "store_literal_in_memory_36b9982a87fc35dcce21cd7c9fe5259f8195356730e6a709672932073665fac0",
												"nativeSrc": "4799:179:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4897:6:5",
														"nodeType": "YulTypedName",
														"src": "4897:6:5",
														"type": ""
													}
												],
												"src": "4799:179:5"
											},
											{
												"body": {
													"nativeSrc": "5130:220:5",
													"nodeType": "YulBlock",
													"src": "5130:220:5",
													"statements": [
														{
															"nativeSrc": "5140:74:5",
															"nodeType": "YulAssignment",
															"src": "5140:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5206:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5206:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5211:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5211:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5147:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "5147:58:5"
																},
																"nativeSrc": "5147:67:5",
																"nodeType": "YulFunctionCall",
																"src": "5147:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5140:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5140:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5312:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5312:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_36b9982a87fc35dcce21cd7c9fe5259f8195356730e6a709672932073665fac0",
																	"nativeSrc": "5223:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "5223:88:5"
																},
																"nativeSrc": "5223:93:5",
																"nodeType": "YulFunctionCall",
																"src": "5223:93:5"
															},
															"nativeSrc": "5223:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "5223:93:5"
														},
														{
															"nativeSrc": "5325:19:5",
															"nodeType": "YulAssignment",
															"src": "5325:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5336:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5336:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5341:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5341:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5332:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5332:3:5"
																},
																"nativeSrc": "5332:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5332:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5325:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5325:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_36b9982a87fc35dcce21cd7c9fe5259f8195356730e6a709672932073665fac0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4984:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5118:3:5",
														"nodeType": "YulTypedName",
														"src": "5118:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5126:3:5",
														"nodeType": "YulTypedName",
														"src": "5126:3:5",
														"type": ""
													}
												],
												"src": "4984:366:5"
											},
											{
												"body": {
													"nativeSrc": "5527:248:5",
													"nodeType": "YulBlock",
													"src": "5527:248:5",
													"statements": [
														{
															"nativeSrc": "5537:26:5",
															"nodeType": "YulAssignment",
															"src": "5537:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5549:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5549:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5560:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5560:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5545:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5545:3:5"
																},
																"nativeSrc": "5545:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5545:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5537:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5537:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5584:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5584:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5595:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5595:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5580:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5580:3:5"
																		},
																		"nativeSrc": "5580:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5580:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5603:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "5603:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5609:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5609:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5599:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5599:3:5"
																		},
																		"nativeSrc": "5599:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5599:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5573:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5573:6:5"
																},
																"nativeSrc": "5573:47:5",
																"nodeType": "YulFunctionCall",
																"src": "5573:47:5"
															},
															"nativeSrc": "5573:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "5573:47:5"
														},
														{
															"nativeSrc": "5629:139:5",
															"nodeType": "YulAssignment",
															"src": "5629:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5763:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5763:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_36b9982a87fc35dcce21cd7c9fe5259f8195356730e6a709672932073665fac0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5637:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "5637:124:5"
																},
																"nativeSrc": "5637:131:5",
																"nodeType": "YulFunctionCall",
																"src": "5637:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5629:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5629:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36b9982a87fc35dcce21cd7c9fe5259f8195356730e6a709672932073665fac0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5356:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5507:9:5",
														"nodeType": "YulTypedName",
														"src": "5507:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5522:4:5",
														"nodeType": "YulTypedName",
														"src": "5522:4:5",
														"type": ""
													}
												],
												"src": "5356:419:5"
											},
											{
												"body": {
													"nativeSrc": "5887:62:5",
													"nodeType": "YulBlock",
													"src": "5887:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5909:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5909:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5917:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5917:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5905:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5905:3:5"
																		},
																		"nativeSrc": "5905:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5905:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nativeSrc": "5921:20:5",
																		"nodeType": "YulLiteral",
																		"src": "5921:20:5",
																		"type": "",
																		"value": "Insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5898:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5898:6:5"
																},
																"nativeSrc": "5898:44:5",
																"nodeType": "YulFunctionCall",
																"src": "5898:44:5"
															},
															"nativeSrc": "5898:44:5",
															"nodeType": "YulExpressionStatement",
															"src": "5898:44:5"
														}
													]
												},
												"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
												"nativeSrc": "5781:168:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5879:6:5",
														"nodeType": "YulTypedName",
														"src": "5879:6:5",
														"type": ""
													}
												],
												"src": "5781:168:5"
											},
											{
												"body": {
													"nativeSrc": "6101:220:5",
													"nodeType": "YulBlock",
													"src": "6101:220:5",
													"statements": [
														{
															"nativeSrc": "6111:74:5",
															"nodeType": "YulAssignment",
															"src": "6111:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6177:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6177:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6182:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6182:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6118:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "6118:58:5"
																},
																"nativeSrc": "6118:67:5",
																"nodeType": "YulFunctionCall",
																"src": "6118:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6111:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6111:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6283:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6283:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																	"nativeSrc": "6194:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "6194:88:5"
																},
																"nativeSrc": "6194:93:5",
																"nodeType": "YulFunctionCall",
																"src": "6194:93:5"
															},
															"nativeSrc": "6194:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "6194:93:5"
														},
														{
															"nativeSrc": "6296:19:5",
															"nodeType": "YulAssignment",
															"src": "6296:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6307:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6307:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6312:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6312:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6303:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6303:3:5"
																},
																"nativeSrc": "6303:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6303:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6296:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6296:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5955:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6089:3:5",
														"nodeType": "YulTypedName",
														"src": "6089:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6097:3:5",
														"nodeType": "YulTypedName",
														"src": "6097:3:5",
														"type": ""
													}
												],
												"src": "5955:366:5"
											},
											{
												"body": {
													"nativeSrc": "6498:248:5",
													"nodeType": "YulBlock",
													"src": "6498:248:5",
													"statements": [
														{
															"nativeSrc": "6508:26:5",
															"nodeType": "YulAssignment",
															"src": "6508:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6520:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6520:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6531:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6531:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6516:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6516:3:5"
																},
																"nativeSrc": "6516:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6516:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6508:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6508:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6555:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6555:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6566:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6566:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6551:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6551:3:5"
																		},
																		"nativeSrc": "6551:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6551:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6574:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6574:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6580:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6580:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6570:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6570:3:5"
																		},
																		"nativeSrc": "6570:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6570:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6544:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6544:6:5"
																},
																"nativeSrc": "6544:47:5",
																"nodeType": "YulFunctionCall",
																"src": "6544:47:5"
															},
															"nativeSrc": "6544:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "6544:47:5"
														},
														{
															"nativeSrc": "6600:139:5",
															"nodeType": "YulAssignment",
															"src": "6600:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6734:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6734:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6608:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "6608:124:5"
																},
																"nativeSrc": "6608:131:5",
																"nodeType": "YulFunctionCall",
																"src": "6608:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6600:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6600:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6327:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6478:9:5",
														"nodeType": "YulTypedName",
														"src": "6478:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6493:4:5",
														"nodeType": "YulTypedName",
														"src": "6493:4:5",
														"type": ""
													}
												],
												"src": "6327:419:5"
											},
											{
												"body": {
													"nativeSrc": "6797:149:5",
													"nodeType": "YulBlock",
													"src": "6797:149:5",
													"statements": [
														{
															"nativeSrc": "6807:25:5",
															"nodeType": "YulAssignment",
															"src": "6807:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6830:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6830:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6812:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6812:17:5"
																},
																"nativeSrc": "6812:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6812:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6807:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6807:1:5"
																}
															]
														},
														{
															"nativeSrc": "6841:25:5",
															"nodeType": "YulAssignment",
															"src": "6841:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6864:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6864:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6846:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6846:17:5"
																},
																"nativeSrc": "6846:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6846:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6841:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6841:1:5"
																}
															]
														},
														{
															"nativeSrc": "6875:17:5",
															"nodeType": "YulAssignment",
															"src": "6875:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6887:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6887:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6890:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6890:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6883:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6883:3:5"
																},
																"nativeSrc": "6883:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6883:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6875:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6875:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6917:22:5",
																"nodeType": "YulBlock",
																"src": "6917:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6919:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6919:16:5"
																			},
																			"nativeSrc": "6919:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6919:18:5"
																		},
																		"nativeSrc": "6919:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6919:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6908:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6908:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6914:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6914:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6905:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6905:2:5"
																},
																"nativeSrc": "6905:11:5",
																"nodeType": "YulFunctionCall",
																"src": "6905:11:5"
															},
															"nativeSrc": "6902:37:5",
															"nodeType": "YulIf",
															"src": "6902:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6752:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6783:1:5",
														"nodeType": "YulTypedName",
														"src": "6783:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6786:1:5",
														"nodeType": "YulTypedName",
														"src": "6786:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6792:4:5",
														"nodeType": "YulTypedName",
														"src": "6792:4:5",
														"type": ""
													}
												],
												"src": "6752:194:5"
											},
											{
												"body": {
													"nativeSrc": "6984:28:5",
													"nodeType": "YulBlock",
													"src": "6984:28:5",
													"statements": [
														{
															"nativeSrc": "6994:12:5",
															"nodeType": "YulAssignment",
															"src": "6994:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "7001:5:5",
																"nodeType": "YulIdentifier",
																"src": "7001:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6994:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6994:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6952:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6970:5:5",
														"nodeType": "YulTypedName",
														"src": "6970:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6980:3:5",
														"nodeType": "YulTypedName",
														"src": "6980:3:5",
														"type": ""
													}
												],
												"src": "6952:60:5"
											},
											{
												"body": {
													"nativeSrc": "7078:82:5",
													"nodeType": "YulBlock",
													"src": "7078:82:5",
													"statements": [
														{
															"nativeSrc": "7088:66:5",
															"nodeType": "YulAssignment",
															"src": "7088:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7146:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7146:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "7128:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "7128:17:5"
																				},
																				"nativeSrc": "7128:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7128:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7119:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "7119:8:5"
																		},
																		"nativeSrc": "7119:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7119:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "7101:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7101:17:5"
																},
																"nativeSrc": "7101:53:5",
																"nodeType": "YulFunctionCall",
																"src": "7101:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7088:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "7088:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "7018:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7058:5:5",
														"nodeType": "YulTypedName",
														"src": "7058:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7068:9:5",
														"nodeType": "YulTypedName",
														"src": "7068:9:5",
														"type": ""
													}
												],
												"src": "7018:142:5"
											},
											{
												"body": {
													"nativeSrc": "7226:66:5",
													"nodeType": "YulBlock",
													"src": "7226:66:5",
													"statements": [
														{
															"nativeSrc": "7236:50:5",
															"nodeType": "YulAssignment",
															"src": "7236:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7280:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7280:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "7249:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "7249:30:5"
																},
																"nativeSrc": "7249:37:5",
																"nodeType": "YulFunctionCall",
																"src": "7249:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7236:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "7236:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "7166:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7206:5:5",
														"nodeType": "YulTypedName",
														"src": "7206:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7216:9:5",
														"nodeType": "YulTypedName",
														"src": "7216:9:5",
														"type": ""
													}
												],
												"src": "7166:126:5"
											},
											{
												"body": {
													"nativeSrc": "7366:66:5",
													"nodeType": "YulBlock",
													"src": "7366:66:5",
													"statements": [
														{
															"nativeSrc": "7376:50:5",
															"nodeType": "YulAssignment",
															"src": "7376:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7420:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7420:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "7389:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "7389:30:5"
																},
																"nativeSrc": "7389:37:5",
																"nodeType": "YulFunctionCall",
																"src": "7389:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7376:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "7376:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_address_payable_to_t_address",
												"nativeSrc": "7298:134:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7346:5:5",
														"nodeType": "YulTypedName",
														"src": "7346:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7356:9:5",
														"nodeType": "YulTypedName",
														"src": "7356:9:5",
														"type": ""
													}
												],
												"src": "7298:134:5"
											},
											{
												"body": {
													"nativeSrc": "7511:74:5",
													"nodeType": "YulBlock",
													"src": "7511:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7528:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7528:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7572:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7572:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_payable_to_t_address",
																			"nativeSrc": "7533:38:5",
																			"nodeType": "YulIdentifier",
																			"src": "7533:38:5"
																		},
																		"nativeSrc": "7533:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7533:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7521:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7521:6:5"
																},
																"nativeSrc": "7521:58:5",
																"nodeType": "YulFunctionCall",
																"src": "7521:58:5"
															},
															"nativeSrc": "7521:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "7521:58:5"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_fromStack",
												"nativeSrc": "7438:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7499:5:5",
														"nodeType": "YulTypedName",
														"src": "7499:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7506:3:5",
														"nodeType": "YulTypedName",
														"src": "7506:3:5",
														"type": ""
													}
												],
												"src": "7438:147:5"
											},
											{
												"body": {
													"nativeSrc": "7753:296:5",
													"nodeType": "YulBlock",
													"src": "7753:296:5",
													"statements": [
														{
															"nativeSrc": "7763:26:5",
															"nodeType": "YulAssignment",
															"src": "7763:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7775:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7775:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7786:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7786:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7771:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7771:3:5"
																},
																"nativeSrc": "7771:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7771:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7763:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7763:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7843:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7843:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7856:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7856:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7867:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7867:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7852:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7852:3:5"
																		},
																		"nativeSrc": "7852:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7852:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7799:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7799:43:5"
																},
																"nativeSrc": "7799:71:5",
																"nodeType": "YulFunctionCall",
																"src": "7799:71:5"
															},
															"nativeSrc": "7799:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "7799:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7932:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7932:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7945:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7945:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7956:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7956:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7941:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7941:3:5"
																		},
																		"nativeSrc": "7941:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7941:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "7880:51:5",
																	"nodeType": "YulIdentifier",
																	"src": "7880:51:5"
																},
																"nativeSrc": "7880:80:5",
																"nodeType": "YulFunctionCall",
																"src": "7880:80:5"
															},
															"nativeSrc": "7880:80:5",
															"nodeType": "YulExpressionStatement",
															"src": "7880:80:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8014:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8014:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8027:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8027:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8038:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8038:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8023:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8023:3:5"
																		},
																		"nativeSrc": "8023:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8023:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7970:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7970:43:5"
																},
																"nativeSrc": "7970:72:5",
																"nodeType": "YulFunctionCall",
																"src": "7970:72:5"
															},
															"nativeSrc": "7970:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "7970:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7591:458:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7709:9:5",
														"nodeType": "YulTypedName",
														"src": "7709:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7721:6:5",
														"nodeType": "YulTypedName",
														"src": "7721:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7729:6:5",
														"nodeType": "YulTypedName",
														"src": "7729:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7737:6:5",
														"nodeType": "YulTypedName",
														"src": "7737:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7748:4:5",
														"nodeType": "YulTypedName",
														"src": "7748:4:5",
														"type": ""
													}
												],
												"src": "7591:458:5"
											},
											{
												"body": {
													"nativeSrc": "8118:80:5",
													"nodeType": "YulBlock",
													"src": "8118:80:5",
													"statements": [
														{
															"nativeSrc": "8128:22:5",
															"nodeType": "YulAssignment",
															"src": "8128:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8143:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8143:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8137:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8137:5:5"
																},
																"nativeSrc": "8137:13:5",
																"nodeType": "YulFunctionCall",
																"src": "8137:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8128:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8128:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8186:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8186:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8159:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "8159:26:5"
																},
																"nativeSrc": "8159:33:5",
																"nodeType": "YulFunctionCall",
																"src": "8159:33:5"
															},
															"nativeSrc": "8159:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "8159:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8055:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8096:6:5",
														"nodeType": "YulTypedName",
														"src": "8096:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8104:3:5",
														"nodeType": "YulTypedName",
														"src": "8104:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8112:5:5",
														"nodeType": "YulTypedName",
														"src": "8112:5:5",
														"type": ""
													}
												],
												"src": "8055:143:5"
											},
											{
												"body": {
													"nativeSrc": "8281:274:5",
													"nodeType": "YulBlock",
													"src": "8281:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "8327:83:5",
																"nodeType": "YulBlock",
																"src": "8327:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8329:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "8329:77:5"
																			},
																			"nativeSrc": "8329:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8329:79:5"
																		},
																		"nativeSrc": "8329:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8329:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8302:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8302:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8311:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8311:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8298:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8298:3:5"
																		},
																		"nativeSrc": "8298:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8298:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8323:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8323:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8294:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8294:3:5"
																},
																"nativeSrc": "8294:32:5",
																"nodeType": "YulFunctionCall",
																"src": "8294:32:5"
															},
															"nativeSrc": "8291:119:5",
															"nodeType": "YulIf",
															"src": "8291:119:5"
														},
														{
															"nativeSrc": "8420:128:5",
															"nodeType": "YulBlock",
															"src": "8420:128:5",
															"statements": [
																{
																	"nativeSrc": "8435:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8435:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8449:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8449:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8439:6:5",
																			"nodeType": "YulTypedName",
																			"src": "8439:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8464:74:5",
																	"nodeType": "YulAssignment",
																	"src": "8464:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8510:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "8510:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8521:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8521:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8506:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8506:3:5"
																				},
																				"nativeSrc": "8506:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8506:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8530:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8530:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8474:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "8474:31:5"
																		},
																		"nativeSrc": "8474:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8474:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8464:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8464:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8204:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8251:9:5",
														"nodeType": "YulTypedName",
														"src": "8251:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8262:7:5",
														"nodeType": "YulTypedName",
														"src": "8262:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8274:6:5",
														"nodeType": "YulTypedName",
														"src": "8274:6:5",
														"type": ""
													}
												],
												"src": "8204:351:5"
											},
											{
												"body": {
													"nativeSrc": "8667:58:5",
													"nodeType": "YulBlock",
													"src": "8667:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8689:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8689:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8697:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8697:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8685:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8685:3:5"
																		},
																		"nativeSrc": "8685:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8685:14:5"
																	},
																	{
																		"hexValue": "42616c616e6365206973206c6f77",
																		"kind": "string",
																		"nativeSrc": "8701:16:5",
																		"nodeType": "YulLiteral",
																		"src": "8701:16:5",
																		"type": "",
																		"value": "Balance is low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8678:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8678:6:5"
																},
																"nativeSrc": "8678:40:5",
																"nodeType": "YulFunctionCall",
																"src": "8678:40:5"
															},
															"nativeSrc": "8678:40:5",
															"nodeType": "YulExpressionStatement",
															"src": "8678:40:5"
														}
													]
												},
												"name": "store_literal_in_memory_c43fd0ca3947cf871eff184fdae3f2d339f1548be2649c2b62c42e0f6a3bc3af",
												"nativeSrc": "8561:164:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8659:6:5",
														"nodeType": "YulTypedName",
														"src": "8659:6:5",
														"type": ""
													}
												],
												"src": "8561:164:5"
											},
											{
												"body": {
													"nativeSrc": "8877:220:5",
													"nodeType": "YulBlock",
													"src": "8877:220:5",
													"statements": [
														{
															"nativeSrc": "8887:74:5",
															"nodeType": "YulAssignment",
															"src": "8887:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8953:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8953:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8958:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8958:2:5",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8894:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "8894:58:5"
																},
																"nativeSrc": "8894:67:5",
																"nodeType": "YulFunctionCall",
																"src": "8894:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8887:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8887:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9059:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9059:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c43fd0ca3947cf871eff184fdae3f2d339f1548be2649c2b62c42e0f6a3bc3af",
																	"nativeSrc": "8970:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "8970:88:5"
																},
																"nativeSrc": "8970:93:5",
																"nodeType": "YulFunctionCall",
																"src": "8970:93:5"
															},
															"nativeSrc": "8970:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "8970:93:5"
														},
														{
															"nativeSrc": "9072:19:5",
															"nodeType": "YulAssignment",
															"src": "9072:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9083:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9083:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9088:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9088:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9079:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9079:3:5"
																},
																"nativeSrc": "9079:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9079:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9072:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9072:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c43fd0ca3947cf871eff184fdae3f2d339f1548be2649c2b62c42e0f6a3bc3af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8731:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8865:3:5",
														"nodeType": "YulTypedName",
														"src": "8865:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8873:3:5",
														"nodeType": "YulTypedName",
														"src": "8873:3:5",
														"type": ""
													}
												],
												"src": "8731:366:5"
											},
											{
												"body": {
													"nativeSrc": "9274:248:5",
													"nodeType": "YulBlock",
													"src": "9274:248:5",
													"statements": [
														{
															"nativeSrc": "9284:26:5",
															"nodeType": "YulAssignment",
															"src": "9284:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9296:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9296:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9307:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9307:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9292:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9292:3:5"
																},
																"nativeSrc": "9292:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9292:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9284:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9284:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9331:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9331:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9342:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9342:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9327:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9327:3:5"
																		},
																		"nativeSrc": "9327:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9327:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9350:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9350:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9356:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9356:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9346:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9346:3:5"
																		},
																		"nativeSrc": "9346:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9346:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9320:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9320:6:5"
																},
																"nativeSrc": "9320:47:5",
																"nodeType": "YulFunctionCall",
																"src": "9320:47:5"
															},
															"nativeSrc": "9320:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "9320:47:5"
														},
														{
															"nativeSrc": "9376:139:5",
															"nodeType": "YulAssignment",
															"src": "9376:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9510:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9510:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c43fd0ca3947cf871eff184fdae3f2d339f1548be2649c2b62c42e0f6a3bc3af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9384:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "9384:124:5"
																},
																"nativeSrc": "9384:131:5",
																"nodeType": "YulFunctionCall",
																"src": "9384:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9376:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9376:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c43fd0ca3947cf871eff184fdae3f2d339f1548be2649c2b62c42e0f6a3bc3af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9103:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9254:9:5",
														"nodeType": "YulTypedName",
														"src": "9254:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9269:4:5",
														"nodeType": "YulTypedName",
														"src": "9269:4:5",
														"type": ""
													}
												],
												"src": "9103:419:5"
											},
											{
												"body": {
													"nativeSrc": "9682:288:5",
													"nodeType": "YulBlock",
													"src": "9682:288:5",
													"statements": [
														{
															"nativeSrc": "9692:26:5",
															"nodeType": "YulAssignment",
															"src": "9692:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9704:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9704:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9715:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9715:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9700:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9700:3:5"
																},
																"nativeSrc": "9700:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9700:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9692:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9692:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9772:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9772:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9785:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9785:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9796:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9796:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9781:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9781:3:5"
																		},
																		"nativeSrc": "9781:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9781:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9728:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9728:43:5"
																},
																"nativeSrc": "9728:71:5",
																"nodeType": "YulFunctionCall",
																"src": "9728:71:5"
															},
															"nativeSrc": "9728:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "9728:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9853:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9853:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9866:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9866:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9877:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9877:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9862:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9862:3:5"
																		},
																		"nativeSrc": "9862:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9862:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9809:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:43:5"
																},
																"nativeSrc": "9809:72:5",
																"nodeType": "YulFunctionCall",
																"src": "9809:72:5"
															},
															"nativeSrc": "9809:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "9809:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9935:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9935:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9948:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9948:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9959:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9959:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9944:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9944:3:5"
																		},
																		"nativeSrc": "9944:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9944:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9891:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9891:43:5"
																},
																"nativeSrc": "9891:72:5",
																"nodeType": "YulFunctionCall",
																"src": "9891:72:5"
															},
															"nativeSrc": "9891:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "9891:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9528:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9638:9:5",
														"nodeType": "YulTypedName",
														"src": "9638:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9650:6:5",
														"nodeType": "YulTypedName",
														"src": "9650:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9658:6:5",
														"nodeType": "YulTypedName",
														"src": "9658:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9666:6:5",
														"nodeType": "YulTypedName",
														"src": "9666:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9677:4:5",
														"nodeType": "YulTypedName",
														"src": "9677:4:5",
														"type": ""
													}
												],
												"src": "9528:442:5"
											},
											{
												"body": {
													"nativeSrc": "10018:48:5",
													"nodeType": "YulBlock",
													"src": "10018:48:5",
													"statements": [
														{
															"nativeSrc": "10028:32:5",
															"nodeType": "YulAssignment",
															"src": "10028:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10053:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "10053:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "10046:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "10046:6:5"
																		},
																		"nativeSrc": "10046:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10046:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10039:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10039:6:5"
																},
																"nativeSrc": "10039:21:5",
																"nodeType": "YulFunctionCall",
																"src": "10039:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10028:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "10028:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "9976:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10000:5:5",
														"nodeType": "YulTypedName",
														"src": "10000:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10010:7:5",
														"nodeType": "YulTypedName",
														"src": "10010:7:5",
														"type": ""
													}
												],
												"src": "9976:90:5"
											},
											{
												"body": {
													"nativeSrc": "10112:76:5",
													"nodeType": "YulBlock",
													"src": "10112:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "10166:16:5",
																"nodeType": "YulBlock",
																"src": "10166:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10175:1:5",
																					"nodeType": "YulLiteral",
																					"src": "10175:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10178:1:5",
																					"nodeType": "YulLiteral",
																					"src": "10178:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10168:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10168:6:5"
																			},
																			"nativeSrc": "10168:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "10168:12:5"
																		},
																		"nativeSrc": "10168:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "10168:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10135:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "10135:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10157:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "10157:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "10142:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "10142:14:5"
																				},
																				"nativeSrc": "10142:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10142:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10132:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "10132:2:5"
																		},
																		"nativeSrc": "10132:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10132:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10125:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10125:6:5"
																},
																"nativeSrc": "10125:40:5",
																"nodeType": "YulFunctionCall",
																"src": "10125:40:5"
															},
															"nativeSrc": "10122:60:5",
															"nodeType": "YulIf",
															"src": "10122:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "10072:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10105:5:5",
														"nodeType": "YulTypedName",
														"src": "10105:5:5",
														"type": ""
													}
												],
												"src": "10072:116:5"
											},
											{
												"body": {
													"nativeSrc": "10254:77:5",
													"nodeType": "YulBlock",
													"src": "10254:77:5",
													"statements": [
														{
															"nativeSrc": "10264:22:5",
															"nodeType": "YulAssignment",
															"src": "10264:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10279:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10279:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10273:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "10273:5:5"
																},
																"nativeSrc": "10273:13:5",
																"nodeType": "YulFunctionCall",
																"src": "10273:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10264:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "10264:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10319:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "10319:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "10295:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "10295:23:5"
																},
																"nativeSrc": "10295:30:5",
																"nodeType": "YulFunctionCall",
																"src": "10295:30:5"
															},
															"nativeSrc": "10295:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "10295:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "10194:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10232:6:5",
														"nodeType": "YulTypedName",
														"src": "10232:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10240:3:5",
														"nodeType": "YulTypedName",
														"src": "10240:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10248:5:5",
														"nodeType": "YulTypedName",
														"src": "10248:5:5",
														"type": ""
													}
												],
												"src": "10194:137:5"
											},
											{
												"body": {
													"nativeSrc": "10411:271:5",
													"nodeType": "YulBlock",
													"src": "10411:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "10457:83:5",
																"nodeType": "YulBlock",
																"src": "10457:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10459:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "10459:77:5"
																			},
																			"nativeSrc": "10459:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "10459:79:5"
																		},
																		"nativeSrc": "10459:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "10459:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10432:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "10432:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10441:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10441:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10428:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10428:3:5"
																		},
																		"nativeSrc": "10428:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10428:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10453:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10453:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10424:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10424:3:5"
																},
																"nativeSrc": "10424:32:5",
																"nodeType": "YulFunctionCall",
																"src": "10424:32:5"
															},
															"nativeSrc": "10421:119:5",
															"nodeType": "YulIf",
															"src": "10421:119:5"
														},
														{
															"nativeSrc": "10550:125:5",
															"nodeType": "YulBlock",
															"src": "10550:125:5",
															"statements": [
																{
																	"nativeSrc": "10565:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10565:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10579:1:5",
																		"nodeType": "YulLiteral",
																		"src": "10579:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10569:6:5",
																			"nodeType": "YulTypedName",
																			"src": "10569:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10594:71:5",
																	"nodeType": "YulAssignment",
																	"src": "10594:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10637:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "10637:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10648:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "10648:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10633:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10633:3:5"
																				},
																				"nativeSrc": "10633:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10633:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10657:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "10657:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "10604:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "10604:28:5"
																		},
																		"nativeSrc": "10604:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10604:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10594:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "10594:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10337:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10381:9:5",
														"nodeType": "YulTypedName",
														"src": "10381:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10392:7:5",
														"nodeType": "YulTypedName",
														"src": "10392:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10404:6:5",
														"nodeType": "YulTypedName",
														"src": "10404:6:5",
														"type": ""
													}
												],
												"src": "10337:345:5"
											},
											{
												"body": {
													"nativeSrc": "10746:40:5",
													"nodeType": "YulBlock",
													"src": "10746:40:5",
													"statements": [
														{
															"nativeSrc": "10757:22:5",
															"nodeType": "YulAssignment",
															"src": "10757:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10773:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "10773:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10767:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "10767:5:5"
																},
																"nativeSrc": "10767:12:5",
																"nodeType": "YulFunctionCall",
																"src": "10767:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10757:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10757:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "10688:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10729:5:5",
														"nodeType": "YulTypedName",
														"src": "10729:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10739:6:5",
														"nodeType": "YulTypedName",
														"src": "10739:6:5",
														"type": ""
													}
												],
												"src": "10688:98:5"
											},
											{
												"body": {
													"nativeSrc": "10905:34:5",
													"nodeType": "YulBlock",
													"src": "10905:34:5",
													"statements": [
														{
															"nativeSrc": "10915:18:5",
															"nodeType": "YulAssignment",
															"src": "10915:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "10930:3:5",
																"nodeType": "YulIdentifier",
																"src": "10930:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10915:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "10915:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10792:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10877:3:5",
														"nodeType": "YulTypedName",
														"src": "10877:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10882:6:5",
														"nodeType": "YulTypedName",
														"src": "10882:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10893:11:5",
														"nodeType": "YulTypedName",
														"src": "10893:11:5",
														"type": ""
													}
												],
												"src": "10792:147:5"
											},
											{
												"body": {
													"nativeSrc": "11007:77:5",
													"nodeType": "YulBlock",
													"src": "11007:77:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "11024:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11024:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "11029:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11029:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11034:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11034:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "11018:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "11018:5:5"
																},
																"nativeSrc": "11018:23:5",
																"nodeType": "YulFunctionCall",
																"src": "11018:23:5"
															},
															"nativeSrc": "11018:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "11018:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "11061:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "11061:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11066:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11066:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11057:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11057:3:5"
																		},
																		"nativeSrc": "11057:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11057:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11075:1:5",
																		"nodeType": "YulLiteral",
																		"src": "11075:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11050:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11050:6:5"
																},
																"nativeSrc": "11050:27:5",
																"nodeType": "YulFunctionCall",
																"src": "11050:27:5"
															},
															"nativeSrc": "11050:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "11050:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "10945:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10989:3:5",
														"nodeType": "YulTypedName",
														"src": "10989:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10994:3:5",
														"nodeType": "YulTypedName",
														"src": "10994:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10999:6:5",
														"nodeType": "YulTypedName",
														"src": "10999:6:5",
														"type": ""
													}
												],
												"src": "10945:139:5"
											},
											{
												"body": {
													"nativeSrc": "11198:278:5",
													"nodeType": "YulBlock",
													"src": "11198:278:5",
													"statements": [
														{
															"nativeSrc": "11208:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "11208:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11254:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "11254:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "11222:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "11222:31:5"
																},
																"nativeSrc": "11222:38:5",
																"nodeType": "YulFunctionCall",
																"src": "11222:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11212:6:5",
																	"nodeType": "YulTypedName",
																	"src": "11212:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11269:95:5",
															"nodeType": "YulAssignment",
															"src": "11269:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11352:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11352:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11357:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11357:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11276:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "11276:75:5"
																},
																"nativeSrc": "11276:88:5",
																"nodeType": "YulFunctionCall",
																"src": "11276:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11269:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11269:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11412:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "11412:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11419:4:5",
																				"nodeType": "YulLiteral",
																				"src": "11419:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11408:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11408:3:5"
																		},
																		"nativeSrc": "11408:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11408:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11426:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11426:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11431:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11431:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11373:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "11373:34:5"
																},
																"nativeSrc": "11373:65:5",
																"nodeType": "YulFunctionCall",
																"src": "11373:65:5"
															},
															"nativeSrc": "11373:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "11373:65:5"
														},
														{
															"nativeSrc": "11447:23:5",
															"nodeType": "YulAssignment",
															"src": "11447:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11458:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11458:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11463:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11463:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11454:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11454:3:5"
																},
																"nativeSrc": "11454:16:5",
																"nodeType": "YulFunctionCall",
																"src": "11454:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11447:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11447:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11090:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11179:5:5",
														"nodeType": "YulTypedName",
														"src": "11179:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11186:3:5",
														"nodeType": "YulTypedName",
														"src": "11186:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11194:3:5",
														"nodeType": "YulTypedName",
														"src": "11194:3:5",
														"type": ""
													}
												],
												"src": "11090:386:5"
											},
											{
												"body": {
													"nativeSrc": "11616:137:5",
													"nodeType": "YulBlock",
													"src": "11616:137:5",
													"statements": [
														{
															"nativeSrc": "11627:100:5",
															"nodeType": "YulAssignment",
															"src": "11627:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11714:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11714:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11723:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11723:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11634:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "11634:79:5"
																},
																"nativeSrc": "11634:93:5",
																"nodeType": "YulFunctionCall",
																"src": "11634:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11627:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11627:3:5"
																}
															]
														},
														{
															"nativeSrc": "11737:10:5",
															"nodeType": "YulAssignment",
															"src": "11737:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "11744:3:5",
																"nodeType": "YulIdentifier",
																"src": "11744:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11737:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11737:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11482:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11595:3:5",
														"nodeType": "YulTypedName",
														"src": "11595:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11601:6:5",
														"nodeType": "YulTypedName",
														"src": "11601:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11612:3:5",
														"nodeType": "YulTypedName",
														"src": "11612:3:5",
														"type": ""
													}
												],
												"src": "11482:271:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payable(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_IERC20_$77(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$77(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$77(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$77(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$77(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$77t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$77(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_36b9982a87fc35dcce21cd7c9fe5259f8195356730e6a709672932073665fac0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can withdraw funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_36b9982a87fc35dcce21cd7c9fe5259f8195356730e6a709672932073665fac0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_36b9982a87fc35dcce21cd7c9fe5259f8195356730e6a709672932073665fac0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36b9982a87fc35dcce21cd7c9fe5259f8195356730e6a709672932073665fac0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36b9982a87fc35dcce21cd7c9fe5259f8195356730e6a709672932073665fac0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_c43fd0ca3947cf871eff184fdae3f2d339f1548be2649c2b62c42e0f6a3bc3af(memPtr) {\n\n        mstore(add(memPtr, 0), \"Balance is low\")\n\n    }\n\n    function abi_encode_t_stringliteral_c43fd0ca3947cf871eff184fdae3f2d339f1548be2649c2b62c42e0f6a3bc3af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_c43fd0ca3947cf871eff184fdae3f2d339f1548be2649c2b62c42e0f6a3bc3af(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c43fd0ca3947cf871eff184fdae3f2d339f1548be2649c2b62c42e0f6a3bc3af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c43fd0ca3947cf871eff184fdae3f2d339f1548be2649c2b62c42e0f6a3bc3af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610041575f3560e01c8062f714ce1461009d5780638da5cb5b146100c55780639db5dbe4146100ef578063b69ef8a81461011757610099565b36610099573460015f8282546100579190610787565b925050819055507ff1b03f708b9c39f453fe3f0cef84164c7d6f7df836df0796e1e9c2bce6ee397e333460405161008f929190610808565b60405180910390a1005b5f80fd5b3480156100a8575f80fd5b506100c360048036038101906100be9190610898565b610141565b005b3480156100d0575f80fd5b506100d96102ae565b6040516100e691906108d6565b60405180910390f35b3480156100fa575f80fd5b5061011560048036038101906101109190610954565b6102d1565b005b348015610122575f80fd5b5061012b610488565b60405161013891906109a4565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c590610a17565b60405180910390fd5b600154821115610213576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020a90610a7f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f19350505050158015610256573d5f803e3d5ffd5b508160015f8282546102689190610a9d565b925050819055507ffda3a3e0e1479b43cb1c701f7576187f4c4ad80768d627387e00184302f7d88e3382846040516102a293929190610b2b565b60405180910390a15050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035590610a17565b60405180910390fd5b5f8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161039891906108d6565b602060405180830381865afa1580156103b3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103d79190610b74565b90508082111561041c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041390610be9565b60405180910390fd5b61044783838673ffffffffffffffffffffffffffffffffffffffff1661048e9092919063ffffffff16565b7f03501c7341fda73ec7c804f841cec1d8d25a04b5a430589f0624026eb1cff37033848460405161047a93929190610c07565b60405180910390a150505050565b60015481565b610508838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016104c1929190610808565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061050d565b505050565b5f610537828473ffffffffffffffffffffffffffffffffffffffff166105a290919063ffffffff16565b90505f81511415801561055b5750808060200190518101906105599190610c71565b155b1561059d57826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161059491906108d6565b60405180910390fd5b505050565b60606105af83835f6105b7565b905092915050565b6060814710156105fe57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016105f591906108d6565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516106269190610cee565b5f6040518083038185875af1925050503d805f8114610660576040519150601f19603f3d011682016040523d82523d5f602084013e610665565b606091505b5091509150610675868383610680565b925050509392505050565b606082610695576106908261070d565b610705565b5f82511480156106bb57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156106fd57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016106f491906108d6565b60405180910390fd5b819050610706565b5b9392505050565b5f8151111561071f5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61079182610751565b915061079c83610751565b92508282019050808211156107b4576107b361075a565b5b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107e3826107ba565b9050919050565b6107f3816107d9565b82525050565b61080281610751565b82525050565b5f60408201905061081b5f8301856107ea565b61082860208301846107f9565b9392505050565b5f80fd5b61083c81610751565b8114610846575f80fd5b50565b5f8135905061085781610833565b92915050565b5f610867826107ba565b9050919050565b6108778161085d565b8114610881575f80fd5b50565b5f813590506108928161086e565b92915050565b5f80604083850312156108ae576108ad61082f565b5b5f6108bb85828601610849565b92505060206108cc85828601610884565b9150509250929050565b5f6020820190506108e95f8301846107ea565b92915050565b5f6108f9826107d9565b9050919050565b610909816108ef565b8114610913575f80fd5b50565b5f8135905061092481610900565b92915050565b610933816107d9565b811461093d575f80fd5b50565b5f8135905061094e8161092a565b92915050565b5f805f6060848603121561096b5761096a61082f565b5b5f61097886828701610916565b935050602061098986828701610940565b925050604061099a86828701610849565b9150509250925092565b5f6020820190506109b75f8301846107f9565b92915050565b5f82825260208201905092915050565b7f4f6e6c79206f776e65722063616e2077697468647261772066756e64730000005f82015250565b5f610a01601d836109bd565b9150610a0c826109cd565b602082019050919050565b5f6020820190508181035f830152610a2e816109f5565b9050919050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f610a696012836109bd565b9150610a7482610a35565b602082019050919050565b5f6020820190508181035f830152610a9681610a5d565b9050919050565b5f610aa782610751565b9150610ab283610751565b9250828203905081811115610aca57610ac961075a565b5b92915050565b5f819050919050565b5f610af3610aee610ae9846107ba565b610ad0565b6107ba565b9050919050565b5f610b0482610ad9565b9050919050565b5f610b1582610afa565b9050919050565b610b2581610b0b565b82525050565b5f606082019050610b3e5f8301866107ea565b610b4b6020830185610b1c565b610b5860408301846107f9565b949350505050565b5f81519050610b6e81610833565b92915050565b5f60208284031215610b8957610b8861082f565b5b5f610b9684828501610b60565b91505092915050565b7f42616c616e6365206973206c6f770000000000000000000000000000000000005f82015250565b5f610bd3600e836109bd565b9150610bde82610b9f565b602082019050919050565b5f6020820190508181035f830152610c0081610bc7565b9050919050565b5f606082019050610c1a5f8301866107ea565b610c2760208301856107ea565b610c3460408301846107f9565b949350505050565b5f8115159050919050565b610c5081610c3c565b8114610c5a575f80fd5b50565b5f81519050610c6b81610c47565b92915050565b5f60208284031215610c8657610c8561082f565b5b5f610c9384828501610c5d565b91505092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f610cc882610c9c565b610cd28185610ca6565b9350610ce2818560208601610cb0565b80840191505092915050565b5f610cf98284610cbe565b91508190509291505056fea26469706673582212204df055fae71f3039051bccbe05a3abef3a22bd8d70f10a241010d2a4a3e4871e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xF714CE EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x9DB5DBE4 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x117 JUMPI PUSH2 0x99 JUMP JUMPDEST CALLDATASIZE PUSH2 0x99 JUMPI CALLVALUE PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x787 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xF1B03F708B9C39F453FE3F0CEF84164C7D6F7DF836DF0796E1E9C2BCE6EE397E CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x8F SWAP3 SWAP2 SWAP1 PUSH2 0x808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x898 JUMP JUMPDEST PUSH2 0x141 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C5 SWAP1 PUSH2 0xA17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP3 GT ISZERO PUSH2 0x213 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20A SWAP1 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x256 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP2 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0xA9D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xFDA3A3E0E1479B43CB1C701F7576187F4C4AD80768D627387E00184302F7D88E CALLER DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x35E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x355 SWAP1 PUSH2 0xA17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x413 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x447 DUP4 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x48E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x3501C7341FDA73EC7C804F841CEC1D8D25A04B5A430589F0624026EB1CFF370 CALLER DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x47A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x508 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4C1 SWAP3 SWAP2 SWAP1 PUSH2 0x808 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x50D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x537 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5A2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x55B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x559 SWAP2 SWAP1 PUSH2 0xC71 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x59D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5AF DUP4 DUP4 PUSH0 PUSH2 0x5B7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x5FE JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x626 SWAP2 SWAP1 PUSH2 0xCEE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x660 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x665 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x675 DUP7 DUP4 DUP4 PUSH2 0x680 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x695 JUMPI PUSH2 0x690 DUP3 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x705 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x6BB JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x6FD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x706 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x71F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x791 DUP3 PUSH2 0x751 JUMP JUMPDEST SWAP2 POP PUSH2 0x79C DUP4 PUSH2 0x751 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x7B4 JUMPI PUSH2 0x7B3 PUSH2 0x75A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7E3 DUP3 PUSH2 0x7BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F3 DUP2 PUSH2 0x7D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x802 DUP2 PUSH2 0x751 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x81B PUSH0 DUP4 ADD DUP6 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x828 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7F9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x83C DUP2 PUSH2 0x751 JUMP JUMPDEST DUP2 EQ PUSH2 0x846 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x857 DUP2 PUSH2 0x833 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x867 DUP3 PUSH2 0x7BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x877 DUP2 PUSH2 0x85D JUMP JUMPDEST DUP2 EQ PUSH2 0x881 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x892 DUP2 PUSH2 0x86E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8AE JUMPI PUSH2 0x8AD PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8BB DUP6 DUP3 DUP7 ADD PUSH2 0x849 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8CC DUP6 DUP3 DUP7 ADD PUSH2 0x884 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8E9 PUSH0 DUP4 ADD DUP5 PUSH2 0x7EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8F9 DUP3 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x909 DUP2 PUSH2 0x8EF JUMP JUMPDEST DUP2 EQ PUSH2 0x913 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x924 DUP2 PUSH2 0x900 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x933 DUP2 PUSH2 0x7D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x93D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x94E DUP2 PUSH2 0x92A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x96B JUMPI PUSH2 0x96A PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x978 DUP7 DUP3 DUP8 ADD PUSH2 0x916 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x989 DUP7 DUP3 DUP8 ADD PUSH2 0x940 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x99A DUP7 DUP3 DUP8 ADD PUSH2 0x849 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x7F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2077697468647261772066756E6473000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA01 PUSH1 0x1D DUP4 PUSH2 0x9BD JUMP JUMPDEST SWAP2 POP PUSH2 0xA0C DUP3 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA2E DUP2 PUSH2 0x9F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA69 PUSH1 0x12 DUP4 PUSH2 0x9BD JUMP JUMPDEST SWAP2 POP PUSH2 0xA74 DUP3 PUSH2 0xA35 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA96 DUP2 PUSH2 0xA5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA7 DUP3 PUSH2 0x751 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB2 DUP4 PUSH2 0x751 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xACA JUMPI PUSH2 0xAC9 PUSH2 0x75A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAF3 PUSH2 0xAEE PUSH2 0xAE9 DUP5 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x7BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB04 DUP3 PUSH2 0xAD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB15 DUP3 PUSH2 0xAFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB25 DUP2 PUSH2 0xB0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB3E PUSH0 DUP4 ADD DUP7 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0xB4B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB1C JUMP JUMPDEST PUSH2 0xB58 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x7F9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB6E DUP2 PUSH2 0x833 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB89 JUMPI PUSH2 0xB88 PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB96 DUP5 DUP3 DUP6 ADD PUSH2 0xB60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x42616C616E6365206973206C6F77000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBD3 PUSH1 0xE DUP4 PUSH2 0x9BD JUMP JUMPDEST SWAP2 POP PUSH2 0xBDE DUP3 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC00 DUP2 PUSH2 0xBC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC1A PUSH0 DUP4 ADD DUP7 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0xC27 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0xC34 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x7F9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC50 DUP2 PUSH2 0xC3C JUMP JUMPDEST DUP2 EQ PUSH2 0xC5A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC6B DUP2 PUSH2 0xC47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC86 JUMPI PUSH2 0xC85 PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC93 DUP5 DUP3 DUP6 ADD PUSH2 0xC5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCC8 DUP3 PUSH2 0xC9C JUMP JUMPDEST PUSH2 0xCD2 DUP2 DUP6 PUSH2 0xCA6 JUMP JUMPDEST SWAP4 POP PUSH2 0xCE2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xCB0 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCF9 DUP3 DUP5 PUSH2 0xCBE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D CREATE SSTORE STATICCALL 0xE7 0x1F ADDRESS CODECOPY SDIV SHL 0xCC 0xBE SDIV LOG3 0xAB 0xEF GASPRICE 0x22 0xBD DUP14 PUSH17 0xF10A241010D2A4A3E4871E64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "218:1343:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;659:9;648:7;;:20;;;;;;;:::i;:::-;;;;;;;;684:39;701:10;713:9;684:39;;;;;;;:::i;:::-;;;;;;;;218:1343;;;;;739:327;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;282:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1139:419;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;309:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;739:327;836:5;;;;;;;;;;822:19;;:10;:19;;;814:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;904:7;;894:6;:17;;886:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;947:8;:17;;:25;965:6;947:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;994:6;983:7;;:17;;;;;;;:::i;:::-;;;;;;;;1016:42;1029:10;1041:8;1051:6;1016:42;;;;;;;;:::i;:::-;;;;;;;;739:327;;:::o;282:20::-;;;;;;;;;;;;:::o;1139:419::-;1244:5;;;;;;;;;;1230:19;;:10;:19;;;1222:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1294:20;1317:5;:15;;;1341:4;1317:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1294:53;;1376:12;1366:6;:22;;1358:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1420:30;1439:2;1443:6;1420:5;:18;;;;:30;;;;;:::i;:::-;1509:41;1527:10;1539:2;1543:6;1509:41;;;;;;;;:::i;:::-;;;;;;;;1211:347;1139:419;;;:::o;309:22::-;;;;:::o;1303:160:2:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;4059:629::-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:3:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:77:5;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:191;316:3;335:20;353:1;335:20;:::i;:::-;330:25;;369:20;387:1;369:20;:::i;:::-;364:25;;412:1;409;405:9;398:16;;433:3;430:1;427:10;424:36;;;440:18;;:::i;:::-;424:36;276:191;;;;:::o;473:126::-;510:7;550:42;543:5;539:54;528:65;;473:126;;;:::o;605:96::-;642:7;671:24;689:5;671:24;:::i;:::-;660:35;;605:96;;;:::o;707:118::-;794:24;812:5;794:24;:::i;:::-;789:3;782:37;707:118;;:::o;831:::-;918:24;936:5;918:24;:::i;:::-;913:3;906:37;831:118;;:::o;955:332::-;1076:4;1114:2;1103:9;1099:18;1091:26;;1127:71;1195:1;1184:9;1180:17;1171:6;1127:71;:::i;:::-;1208:72;1276:2;1265:9;1261:18;1252:6;1208:72;:::i;:::-;955:332;;;;;:::o;1374:117::-;1483:1;1480;1473:12;1620:122;1693:24;1711:5;1693:24;:::i;:::-;1686:5;1683:35;1673:63;;1732:1;1729;1722:12;1673:63;1620:122;:::o;1748:139::-;1794:5;1832:6;1819:20;1810:29;;1848:33;1875:5;1848:33;:::i;:::-;1748:139;;;;:::o;1893:104::-;1938:7;1967:24;1985:5;1967:24;:::i;:::-;1956:35;;1893:104;;;:::o;2003:138::-;2084:32;2110:5;2084:32;:::i;:::-;2077:5;2074:43;2064:71;;2131:1;2128;2121:12;2064:71;2003:138;:::o;2147:155::-;2201:5;2239:6;2226:20;2217:29;;2255:41;2290:5;2255:41;:::i;:::-;2147:155;;;;:::o;2308:490::-;2384:6;2392;2441:2;2429:9;2420:7;2416:23;2412:32;2409:119;;;2447:79;;:::i;:::-;2409:119;2567:1;2592:53;2637:7;2628:6;2617:9;2613:22;2592:53;:::i;:::-;2582:63;;2538:117;2694:2;2720:61;2773:7;2764:6;2753:9;2749:22;2720:61;:::i;:::-;2710:71;;2665:126;2308:490;;;;;:::o;2804:222::-;2897:4;2935:2;2924:9;2920:18;2912:26;;2948:71;3016:1;3005:9;3001:17;2992:6;2948:71;:::i;:::-;2804:222;;;;:::o;3032:109::-;3082:7;3111:24;3129:5;3111:24;:::i;:::-;3100:35;;3032:109;;;:::o;3147:148::-;3233:37;3264:5;3233:37;:::i;:::-;3226:5;3223:48;3213:76;;3285:1;3282;3275:12;3213:76;3147:148;:::o;3301:165::-;3360:5;3398:6;3385:20;3376:29;;3414:46;3454:5;3414:46;:::i;:::-;3301:165;;;;:::o;3472:122::-;3545:24;3563:5;3545:24;:::i;:::-;3538:5;3535:35;3525:63;;3584:1;3581;3574:12;3525:63;3472:122;:::o;3600:139::-;3646:5;3684:6;3671:20;3662:29;;3700:33;3727:5;3700:33;:::i;:::-;3600:139;;;;:::o;3745:645::-;3835:6;3843;3851;3900:2;3888:9;3879:7;3875:23;3871:32;3868:119;;;3906:79;;:::i;:::-;3868:119;4026:1;4051:66;4109:7;4100:6;4089:9;4085:22;4051:66;:::i;:::-;4041:76;;3997:130;4166:2;4192:53;4237:7;4228:6;4217:9;4213:22;4192:53;:::i;:::-;4182:63;;4137:118;4294:2;4320:53;4365:7;4356:6;4345:9;4341:22;4320:53;:::i;:::-;4310:63;;4265:118;3745:645;;;;;:::o;4396:222::-;4489:4;4527:2;4516:9;4512:18;4504:26;;4540:71;4608:1;4597:9;4593:17;4584:6;4540:71;:::i;:::-;4396:222;;;;:::o;4624:169::-;4708:11;4742:6;4737:3;4730:19;4782:4;4777:3;4773:14;4758:29;;4624:169;;;;:::o;4799:179::-;4939:31;4935:1;4927:6;4923:14;4916:55;4799:179;:::o;4984:366::-;5126:3;5147:67;5211:2;5206:3;5147:67;:::i;:::-;5140:74;;5223:93;5312:3;5223:93;:::i;:::-;5341:2;5336:3;5332:12;5325:19;;4984:366;;;:::o;5356:419::-;5522:4;5560:2;5549:9;5545:18;5537:26;;5609:9;5603:4;5599:20;5595:1;5584:9;5580:17;5573:47;5637:131;5763:4;5637:131;:::i;:::-;5629:139;;5356:419;;;:::o;5781:168::-;5921:20;5917:1;5909:6;5905:14;5898:44;5781:168;:::o;5955:366::-;6097:3;6118:67;6182:2;6177:3;6118:67;:::i;:::-;6111:74;;6194:93;6283:3;6194:93;:::i;:::-;6312:2;6307:3;6303:12;6296:19;;5955:366;;;:::o;6327:419::-;6493:4;6531:2;6520:9;6516:18;6508:26;;6580:9;6574:4;6570:20;6566:1;6555:9;6551:17;6544:47;6608:131;6734:4;6608:131;:::i;:::-;6600:139;;6327:419;;;:::o;6752:194::-;6792:4;6812:20;6830:1;6812:20;:::i;:::-;6807:25;;6846:20;6864:1;6846:20;:::i;:::-;6841:25;;6890:1;6887;6883:9;6875:17;;6914:1;6908:4;6905:11;6902:37;;;6919:18;;:::i;:::-;6902:37;6752:194;;;;:::o;6952:60::-;6980:3;7001:5;6994:12;;6952:60;;;:::o;7018:142::-;7068:9;7101:53;7119:34;7128:24;7146:5;7128:24;:::i;:::-;7119:34;:::i;:::-;7101:53;:::i;:::-;7088:66;;7018:142;;;:::o;7166:126::-;7216:9;7249:37;7280:5;7249:37;:::i;:::-;7236:50;;7166:126;;;:::o;7298:134::-;7356:9;7389:37;7420:5;7389:37;:::i;:::-;7376:50;;7298:134;;;:::o;7438:147::-;7533:45;7572:5;7533:45;:::i;:::-;7528:3;7521:58;7438:147;;:::o;7591:458::-;7748:4;7786:2;7775:9;7771:18;7763:26;;7799:71;7867:1;7856:9;7852:17;7843:6;7799:71;:::i;:::-;7880:80;7956:2;7945:9;7941:18;7932:6;7880:80;:::i;:::-;7970:72;8038:2;8027:9;8023:18;8014:6;7970:72;:::i;:::-;7591:458;;;;;;:::o;8055:143::-;8112:5;8143:6;8137:13;8128:22;;8159:33;8186:5;8159:33;:::i;:::-;8055:143;;;;:::o;8204:351::-;8274:6;8323:2;8311:9;8302:7;8298:23;8294:32;8291:119;;;8329:79;;:::i;:::-;8291:119;8449:1;8474:64;8530:7;8521:6;8510:9;8506:22;8474:64;:::i;:::-;8464:74;;8420:128;8204:351;;;;:::o;8561:164::-;8701:16;8697:1;8689:6;8685:14;8678:40;8561:164;:::o;8731:366::-;8873:3;8894:67;8958:2;8953:3;8894:67;:::i;:::-;8887:74;;8970:93;9059:3;8970:93;:::i;:::-;9088:2;9083:3;9079:12;9072:19;;8731:366;;;:::o;9103:419::-;9269:4;9307:2;9296:9;9292:18;9284:26;;9356:9;9350:4;9346:20;9342:1;9331:9;9327:17;9320:47;9384:131;9510:4;9384:131;:::i;:::-;9376:139;;9103:419;;;:::o;9528:442::-;9677:4;9715:2;9704:9;9700:18;9692:26;;9728:71;9796:1;9785:9;9781:17;9772:6;9728:71;:::i;:::-;9809:72;9877:2;9866:9;9862:18;9853:6;9809:72;:::i;:::-;9891;9959:2;9948:9;9944:18;9935:6;9891:72;:::i;:::-;9528:442;;;;;;:::o;9976:90::-;10010:7;10053:5;10046:13;10039:21;10028:32;;9976:90;;;:::o;10072:116::-;10142:21;10157:5;10142:21;:::i;:::-;10135:5;10132:32;10122:60;;10178:1;10175;10168:12;10122:60;10072:116;:::o;10194:137::-;10248:5;10279:6;10273:13;10264:22;;10295:30;10319:5;10295:30;:::i;:::-;10194:137;;;;:::o;10337:345::-;10404:6;10453:2;10441:9;10432:7;10428:23;10424:32;10421:119;;;10459:79;;:::i;:::-;10421:119;10579:1;10604:61;10657:7;10648:6;10637:9;10633:22;10604:61;:::i;:::-;10594:71;;10550:125;10337:345;;;;:::o;10688:98::-;10739:6;10773:5;10767:12;10757:22;;10688:98;;;:::o;10792:147::-;10893:11;10930:3;10915:18;;10792:147;;;;:::o;10945:139::-;11034:6;11029:3;11024;11018:23;11075:1;11066:6;11061:3;11057:16;11050:27;10945:139;;;:::o;11090:386::-;11194:3;11222:38;11254:5;11222:38;:::i;:::-;11276:88;11357:6;11352:3;11276:88;:::i;:::-;11269:95;;11373:65;11431:6;11426:3;11419:4;11412:5;11408:16;11373:65;:::i;:::-;11463:6;11458:3;11454:16;11447:23;;11198:278;11090:386;;;;:::o;11482:271::-;11612:3;11634:93;11723:3;11714:6;11634:93;:::i;:::-;11627:100;;11744:3;11737:10;;11482:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "677200",
								"executionCost": "24971",
								"totalCost": "702171"
							},
							"external": {
								"balance()": "2469",
								"owner()": "2505",
								"transferERC20(address,address,uint256)": "infinite",
								"withdraw(uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 218,
									"end": 1561,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 218,
									"end": 1561,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 218,
									"end": 1561,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 551,
									"end": 602,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 551,
									"end": 602,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 551,
									"end": 602,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 551,
									"end": 602,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 551,
									"end": 602,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 551,
									"end": 602,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 551,
									"end": 602,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 551,
									"end": 602,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 551,
									"end": 602,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 551,
									"end": 602,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 551,
									"end": 602,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 584,
									"end": 594,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 576,
									"end": 581,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 576,
									"end": 581,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 576,
									"end": 594,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 576,
									"end": 594,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 576,
									"end": 594,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 576,
									"end": 594,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 576,
									"end": 594,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 576,
									"end": 594,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 576,
									"end": 594,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 576,
									"end": 594,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 576,
									"end": 594,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 576,
									"end": 594,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 576,
									"end": 594,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 576,
									"end": 594,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 576,
									"end": 594,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 576,
									"end": 594,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 576,
									"end": 594,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 576,
									"end": 594,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 576,
									"end": 594,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 576,
									"end": 594,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 218,
									"end": 1561,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 218,
									"end": 1561,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 218,
									"end": 1561,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 218,
									"end": 1561,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 218,
									"end": 1561,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 218,
									"end": 1561,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 218,
									"end": 1561,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204df055fae71f3039051bccbe05a3abef3a22bd8d70f10a241010d2a4a3e4871e64736f6c634300081a0033",
									".code": [
										{
											"begin": 218,
											"end": 1561,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "PUSH",
											"source": 4,
											"value": "F714CE"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "PUSH",
											"source": 4,
											"value": "9DB5DBE4"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "PUSH",
											"source": 4,
											"value": "B69EF8A8"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 659,
											"end": 668,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 648,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 648,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 668,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 648,
											"end": 668,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 648,
											"end": 668,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 648,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 648,
											"end": 668,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 648,
											"end": 668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 648,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 648,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 648,
											"end": 668,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 648,
											"end": 668,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 648,
											"end": 668,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 648,
											"end": 668,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 648,
											"end": 668,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 648,
											"end": 668,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 648,
											"end": 668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 648,
											"end": 668,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 648,
											"end": 668,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 684,
											"end": 723,
											"name": "PUSH",
											"source": 4,
											"value": "F1B03F708B9C39F453FE3F0CEF84164C7D6F7DF836DF0796E1E9C2BCE6EE397E"
										},
										{
											"begin": 701,
											"end": 711,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 713,
											"end": 722,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 684,
											"end": 723,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 684,
											"end": 723,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 684,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 684,
											"end": 723,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 684,
											"end": 723,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 684,
											"end": 723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 684,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 684,
											"end": 723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 684,
											"end": 723,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 684,
											"end": 723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 684,
											"end": 723,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 684,
											"end": 723,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 684,
											"end": 723,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 684,
											"end": 723,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 684,
											"end": 723,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 684,
											"end": 723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 684,
											"end": 723,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 218,
											"end": 1561,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 739,
											"end": 1066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 739,
											"end": 1066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 282,
											"end": 302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 282,
											"end": 302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1139,
											"end": 1558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1139,
											"end": 1558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 309,
											"end": 331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 309,
											"end": 331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 836,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 841,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 836,
											"end": 841,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 836,
											"end": 841,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 836,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 836,
											"end": 841,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 836,
											"end": 841,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 836,
											"end": 841,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 836,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 841,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 822,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 822,
											"end": 841,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 822,
											"end": 832,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 822,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 822,
											"end": 841,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 822,
											"end": 841,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 814,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 814,
											"end": 875,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 814,
											"end": 875,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 875,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 814,
											"end": 875,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 814,
											"end": 875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 814,
											"end": 875,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 814,
											"end": 875,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 814,
											"end": 875,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 814,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 814,
											"end": 875,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 814,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 814,
											"end": 875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 814,
											"end": 875,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 814,
											"end": 875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 814,
											"end": 875,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 875,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 814,
											"end": 875,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 814,
											"end": 875,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 814,
											"end": 875,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 814,
											"end": 875,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 814,
											"end": 875,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 814,
											"end": 875,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 814,
											"end": 875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 904,
											"end": 911,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 904,
											"end": 911,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 894,
											"end": 900,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 894,
											"end": 911,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 894,
											"end": 911,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 886,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 886,
											"end": 934,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 886,
											"end": 934,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 934,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 886,
											"end": 934,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 886,
											"end": 934,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 886,
											"end": 934,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 886,
											"end": 934,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 934,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 886,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 886,
											"end": 934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 886,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 886,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 886,
											"end": 934,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 886,
											"end": 934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 886,
											"end": 934,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 934,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 886,
											"end": 934,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 886,
											"end": 934,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 886,
											"end": 934,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 886,
											"end": 934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 886,
											"end": 934,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 886,
											"end": 934,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 886,
											"end": 934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 947,
											"end": 955,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 947,
											"end": 964,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 947,
											"end": 964,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "PUSH",
											"source": 4,
											"value": "8FC"
										},
										{
											"begin": 965,
											"end": 971,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 947,
											"end": 972,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 972,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 947,
											"end": 972,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 947,
											"end": 972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 972,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 947,
											"end": 972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 947,
											"end": 972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 983,
											"end": 990,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 983,
											"end": 990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 983,
											"end": 1000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "PUSH",
											"source": 4,
											"value": "FDA3A3E0E1479B43CB1C701F7576187F4C4AD80768D627387E00184302F7D88E"
										},
										{
											"begin": 1029,
											"end": 1039,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1041,
											"end": 1049,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1016,
											"end": 1058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1058,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 282,
											"end": 302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1249,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1230,
											"end": 1249,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1240,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1249,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1230,
											"end": 1249,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1249,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1222,
											"end": 1283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1222,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1294,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1322,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1332,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1317,
											"end": 1332,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1332,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1341,
											"end": 1345,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1317,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1317,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1317,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1294,
											"end": 1347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1294,
											"end": 1347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1388,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1358,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1358,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1420,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1439,
											"end": 1441,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1420,
											"end": 1425,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1420,
											"end": 1450,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1420,
											"end": 1450,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1420,
											"end": 1450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1420,
											"end": 1450,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1420,
											"end": 1450,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1420,
											"end": 1450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1420,
											"end": 1450,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1420,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "3501C7341FDA73EC7C804F841CEC1D8D25A04B5A430589F0624026EB1CFF370"
										},
										{
											"begin": 1527,
											"end": 1537,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1541,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1543,
											"end": 1549,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1509,
											"end": 1550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1550,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 1558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 309,
											"end": 331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 270,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 90,
											"end": 270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 138,
											"end": 215,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 240,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 259,
											"end": 263,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 264,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 276,
											"end": 467,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 276,
											"end": 467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 316,
											"end": 319,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 353,
											"end": 354,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 335,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 335,
											"end": 355,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 369,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 369,
											"end": 389,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 369,
											"end": 389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 364,
											"end": 389,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 364,
											"end": 389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 405,
											"end": 414,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 398,
											"end": 414,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 398,
											"end": 414,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 430,
											"end": 431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 427,
											"end": 437,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 424,
											"end": 460,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 424,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 440,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 440,
											"end": 458,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 424,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 276,
											"end": 467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 473,
											"end": 599,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 473,
											"end": 599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 510,
											"end": 517,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 592,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 543,
											"end": 548,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 539,
											"end": 593,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 528,
											"end": 593,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 528,
											"end": 593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 473,
											"end": 599,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 473,
											"end": 599,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 473,
											"end": 599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 473,
											"end": 599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 605,
											"end": 701,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 605,
											"end": 701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 642,
											"end": 649,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 671,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 671,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 671,
											"end": 695,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 671,
											"end": 695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 660,
											"end": 695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 660,
											"end": 695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 605,
											"end": 701,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 605,
											"end": 701,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 605,
											"end": 701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 605,
											"end": 701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 707,
											"end": 825,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 707,
											"end": 825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 794,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 812,
											"end": 817,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 794,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 794,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 794,
											"end": 818,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 794,
											"end": 818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 789,
											"end": 792,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 782,
											"end": 819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 707,
											"end": 825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 707,
											"end": 825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 707,
											"end": 825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 831,
											"end": 949,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 831,
											"end": 949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 918,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 936,
											"end": 941,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 918,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 918,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 918,
											"end": 942,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 918,
											"end": 942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 913,
											"end": 916,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 906,
											"end": 943,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 831,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 831,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 831,
											"end": 949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1287,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 955,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1080,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1116,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1117,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1195,
											"end": 1196,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1193,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1197,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1127,
											"end": 1198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1198,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1127,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1276,
											"end": 1278,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1265,
											"end": 1274,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1261,
											"end": 1279,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1208,
											"end": 1280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1280,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1208,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1287,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1287,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1287,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1287,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1287,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1491,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1374,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1480,
											"end": 1481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1485,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1742,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1620,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1711,
											"end": 1716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1693,
											"end": 1717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1717,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1693,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1691,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1673,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1673,
											"end": 1736,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1732,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1730,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1734,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1673,
											"end": 1736,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1673,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1742,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1887,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1748,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1799,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1839,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1839,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1839,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1848,
											"end": 1881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1881,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1848,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1887,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1887,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1887,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1997,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1893,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1945,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1967,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1967,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 1991,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1967,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1991,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1997,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1997,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1997,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2141,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2003,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2110,
											"end": 2115,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2084,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2116,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2084,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2117,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2064,
											"end": 2135,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2133,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2135,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2064,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2147,
											"end": 2302,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2147,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2206,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2245,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2246,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2290,
											"end": 2295,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2255,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2296,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2255,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2147,
											"end": 2302,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2147,
											"end": 2302,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2147,
											"end": 2302,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2147,
											"end": 2302,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2147,
											"end": 2302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2798,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2308,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2398,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2443,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2438,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2427,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2416,
											"end": 2439,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2444,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2409,
											"end": 2528,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2409,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2409,
											"end": 2528,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2447,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2447,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2526,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2447,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2409,
											"end": 2528,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2409,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2568,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2637,
											"end": 2644,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2617,
											"end": 2626,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2592,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2645,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2592,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2582,
											"end": 2645,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2582,
											"end": 2645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2694,
											"end": 2696,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2720,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2773,
											"end": 2780,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2753,
											"end": 2762,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2720,
											"end": 2781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2781,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2720,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2781,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2781,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2791,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2798,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2798,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 3026,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2804,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2897,
											"end": 2901,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2937,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2924,
											"end": 2933,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2938,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2938,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2948,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3016,
											"end": 3017,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3005,
											"end": 3014,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2992,
											"end": 2998,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2948,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2948,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2948,
											"end": 3019,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2948,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 3026,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 3026,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 3026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 3026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 3026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3032,
											"end": 3141,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3032,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3129,
											"end": 3134,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3111,
											"end": 3135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3135,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3111,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3135,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3032,
											"end": 3141,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3032,
											"end": 3141,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3032,
											"end": 3141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3032,
											"end": 3141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3295,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3147,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3264,
											"end": 3269,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3233,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3270,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3233,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3226,
											"end": 3231,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3223,
											"end": 3271,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3213,
											"end": 3289,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3282,
											"end": 3283,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3275,
											"end": 3287,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3289,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3213,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3466,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3301,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3365,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3405,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3376,
											"end": 3405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3376,
											"end": 3405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3414,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3454,
											"end": 3459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3414,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3414,
											"end": 3460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3414,
											"end": 3460,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3414,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3466,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3466,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3466,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3466,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3472,
											"end": 3594,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3472,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3563,
											"end": 3568,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3545,
											"end": 3569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3569,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3545,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3543,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3525,
											"end": 3588,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3581,
											"end": 3582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3586,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3588,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3525,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3472,
											"end": 3594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3472,
											"end": 3594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3739,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3600,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3646,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3691,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3727,
											"end": 3732,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3700,
											"end": 3733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3733,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3700,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3739,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3739,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3739,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3739,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4390,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3745,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3857,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3902,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3879,
											"end": 3886,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3898,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3903,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3906,
											"end": 3985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4109,
											"end": 4116,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4106,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4089,
											"end": 4098,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4085,
											"end": 4107,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4051,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4051,
											"end": 4117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4051,
											"end": 4117,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4051,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4041,
											"end": 4117,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4041,
											"end": 4117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3997,
											"end": 4127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4237,
											"end": 4244,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4228,
											"end": 4234,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4226,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4213,
											"end": 4235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4192,
											"end": 4245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4245,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4192,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4182,
											"end": 4245,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4182,
											"end": 4245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4296,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4320,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 4365,
											"end": 4372,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4345,
											"end": 4354,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4320,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4320,
											"end": 4373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4320,
											"end": 4373,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 4320,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4373,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4265,
											"end": 4383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4390,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4390,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4390,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4618,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 4396,
											"end": 4618,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4489,
											"end": 4493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4529,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4516,
											"end": 4525,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4512,
											"end": 4530,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4530,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4530,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4608,
											"end": 4609,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4606,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4610,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4584,
											"end": 4590,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4540,
											"end": 4611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4611,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4540,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4618,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4618,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4618,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4618,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 4793,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4624,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4737,
											"end": 4740,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4730,
											"end": 4749,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4786,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4777,
											"end": 4780,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4773,
											"end": 4787,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 4787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 4787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 4793,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 4793,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 4793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 4793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 4793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4799,
											"end": 4978,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4799,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4939,
											"end": 4970,
											"name": "PUSH",
											"source": 5,
											"value": "4F6E6C79206F776E65722063616E2077697468647261772066756E6473000000"
										},
										{
											"begin": 4935,
											"end": 4936,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4927,
											"end": 4933,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4923,
											"end": 4937,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 4971,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4799,
											"end": 4978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4799,
											"end": 4978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5350,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 4984,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5126,
											"end": 5129,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5147,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 5211,
											"end": 5213,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 5206,
											"end": 5209,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5147,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5147,
											"end": 5214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5147,
											"end": 5214,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 5147,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5140,
											"end": 5214,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5140,
											"end": 5214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 5312,
											"end": 5315,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 5223,
											"end": 5316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5316,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 5223,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5343,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5336,
											"end": 5339,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5325,
											"end": 5344,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5325,
											"end": 5344,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5350,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5356,
											"end": 5775,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 5356,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5526,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5562,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5549,
											"end": 5558,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5545,
											"end": 5563,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5537,
											"end": 5563,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5537,
											"end": 5563,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5609,
											"end": 5618,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5603,
											"end": 5607,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5599,
											"end": 5619,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5595,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5593,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5620,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5637,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 5763,
											"end": 5767,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5637,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5637,
											"end": 5768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5637,
											"end": 5768,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 5637,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 5768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 5768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5356,
											"end": 5775,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5356,
											"end": 5775,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5356,
											"end": 5775,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5356,
											"end": 5775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5781,
											"end": 5949,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5781,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 5917,
											"end": 5918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5909,
											"end": 5915,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5905,
											"end": 5919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5898,
											"end": 5942,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5781,
											"end": 5949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5781,
											"end": 5949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 6321,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5955,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6118,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 6182,
											"end": 6184,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 6177,
											"end": 6180,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6118,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 6118,
											"end": 6185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6118,
											"end": 6185,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 6118,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6111,
											"end": 6185,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6111,
											"end": 6185,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6194,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 6283,
											"end": 6286,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6194,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 6194,
											"end": 6287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6194,
											"end": 6287,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 6194,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6310,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6303,
											"end": 6315,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6296,
											"end": 6315,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6296,
											"end": 6315,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 6321,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 6321,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 6321,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 6321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6327,
											"end": 6746,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 6327,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6493,
											"end": 6497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6533,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6520,
											"end": 6529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6534,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6534,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6534,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6580,
											"end": 6589,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6574,
											"end": 6578,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6590,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6566,
											"end": 6567,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6555,
											"end": 6564,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6568,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 6591,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 6734,
											"end": 6738,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 6608,
											"end": 6739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6739,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 6608,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6739,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6739,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6327,
											"end": 6746,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6327,
											"end": 6746,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6327,
											"end": 6746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6327,
											"end": 6746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6752,
											"end": 6946,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 6752,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6792,
											"end": 6796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6812,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6830,
											"end": 6831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6812,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 6812,
											"end": 6832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6812,
											"end": 6832,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6812,
											"end": 6832,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6832,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6832,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6846,
											"end": 6866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 6864,
											"end": 6865,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6846,
											"end": 6866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 6846,
											"end": 6866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6846,
											"end": 6866,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 6846,
											"end": 6866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6841,
											"end": 6866,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6841,
											"end": 6866,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6890,
											"end": 6891,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6887,
											"end": 6888,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6883,
											"end": 6892,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6875,
											"end": 6892,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6875,
											"end": 6892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 6915,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6905,
											"end": 6916,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6902,
											"end": 6939,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6902,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 6902,
											"end": 6939,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 6919,
											"end": 6937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6902,
											"end": 6939,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 6902,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6752,
											"end": 6946,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6752,
											"end": 6946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6752,
											"end": 6946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6752,
											"end": 6946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6752,
											"end": 6946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6952,
											"end": 7012,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 6952,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6980,
											"end": 6983,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7001,
											"end": 7006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7006,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6952,
											"end": 7012,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6952,
											"end": 7012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6952,
											"end": 7012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6952,
											"end": 7012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7018,
											"end": 7160,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7018,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7068,
											"end": 7077,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7101,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 7119,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 7128,
											"end": 7152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 7146,
											"end": 7151,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7128,
											"end": 7152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 7128,
											"end": 7152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7128,
											"end": 7152,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 7128,
											"end": 7152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7119,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 7119,
											"end": 7153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7119,
											"end": 7153,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 7119,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7101,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 7101,
											"end": 7154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7101,
											"end": 7154,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 7101,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7088,
											"end": 7154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7088,
											"end": 7154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7018,
											"end": 7160,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7018,
											"end": 7160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7018,
											"end": 7160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7018,
											"end": 7160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7292,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7166,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 7280,
											"end": 7285,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7249,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7249,
											"end": 7286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7249,
											"end": 7286,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 7249,
											"end": 7286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7236,
											"end": 7286,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7236,
											"end": 7286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7292,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7292,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7292,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7432,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 7298,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7356,
											"end": 7365,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7389,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 7420,
											"end": 7425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7389,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7389,
											"end": 7426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7389,
											"end": 7426,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 7389,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7376,
											"end": 7426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7376,
											"end": 7426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7432,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7432,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7432,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7438,
											"end": 7585,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 7438,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 7572,
											"end": 7577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 7533,
											"end": 7578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7578,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 7533,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7531,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7521,
											"end": 7579,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7438,
											"end": 7585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7438,
											"end": 7585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7438,
											"end": 7585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7591,
											"end": 8049,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 7591,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7748,
											"end": 7752,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7786,
											"end": 7788,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7775,
											"end": 7784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7771,
											"end": 7789,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7763,
											"end": 7789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7763,
											"end": 7789,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7799,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 7867,
											"end": 7868,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7865,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7852,
											"end": 7869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7843,
											"end": 7849,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7799,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 7799,
											"end": 7870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7799,
											"end": 7870,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 7799,
											"end": 7870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7880,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 7956,
											"end": 7958,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7945,
											"end": 7954,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 7938,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7880,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 7880,
											"end": 7960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7880,
											"end": 7960,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 7880,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7970,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 8038,
											"end": 8040,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8036,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8014,
											"end": 8020,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7970,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 7970,
											"end": 8042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7970,
											"end": 8042,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 7970,
											"end": 8042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7591,
											"end": 8049,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7591,
											"end": 8049,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7591,
											"end": 8049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7591,
											"end": 8049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7591,
											"end": 8049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7591,
											"end": 8049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7591,
											"end": 8049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8055,
											"end": 8198,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 8055,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8112,
											"end": 8117,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8143,
											"end": 8149,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8137,
											"end": 8150,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8128,
											"end": 8150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8128,
											"end": 8150,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8159,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 8186,
											"end": 8191,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8159,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 8159,
											"end": 8192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8159,
											"end": 8192,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 8159,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8055,
											"end": 8198,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8055,
											"end": 8198,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8055,
											"end": 8198,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8055,
											"end": 8198,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8055,
											"end": 8198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8204,
											"end": 8555,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 8204,
											"end": 8555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8274,
											"end": 8280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8323,
											"end": 8325,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8311,
											"end": 8320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8302,
											"end": 8309,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8298,
											"end": 8321,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8294,
											"end": 8326,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 8291,
											"end": 8410,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8291,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 8291,
											"end": 8410,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 8329,
											"end": 8408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8291,
											"end": 8410,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 8291,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8449,
											"end": 8450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8474,
											"end": 8538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 8530,
											"end": 8537,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8521,
											"end": 8527,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8510,
											"end": 8519,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8506,
											"end": 8528,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8474,
											"end": 8538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 8474,
											"end": 8538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8474,
											"end": 8538,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 8474,
											"end": 8538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8464,
											"end": 8538,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8464,
											"end": 8538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8420,
											"end": 8548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8204,
											"end": 8555,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8204,
											"end": 8555,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8204,
											"end": 8555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8204,
											"end": 8555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8204,
											"end": 8555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8561,
											"end": 8725,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 8561,
											"end": 8725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8701,
											"end": 8717,
											"name": "PUSH",
											"source": 5,
											"value": "42616C616E6365206973206C6F77000000000000000000000000000000000000"
										},
										{
											"begin": 8697,
											"end": 8698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8689,
											"end": 8695,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8685,
											"end": 8699,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8678,
											"end": 8718,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8561,
											"end": 8725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8561,
											"end": 8725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8731,
											"end": 9097,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 8731,
											"end": 9097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8873,
											"end": 8876,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8894,
											"end": 8961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 8958,
											"end": 8960,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 8953,
											"end": 8956,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8894,
											"end": 8961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 8894,
											"end": 8961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8894,
											"end": 8961,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 8894,
											"end": 8961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8887,
											"end": 8961,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8887,
											"end": 8961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 9063,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 9059,
											"end": 9062,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 9063,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 8970,
											"end": 9063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 9063,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 8970,
											"end": 9063,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9088,
											"end": 9090,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9083,
											"end": 9086,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9079,
											"end": 9091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9072,
											"end": 9091,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9072,
											"end": 9091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8731,
											"end": 9097,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8731,
											"end": 9097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8731,
											"end": 9097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8731,
											"end": 9097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9522,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 9103,
											"end": 9522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9269,
											"end": 9273,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9307,
											"end": 9309,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9296,
											"end": 9305,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9292,
											"end": 9310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9284,
											"end": 9310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9284,
											"end": 9310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9365,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9350,
											"end": 9354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9346,
											"end": 9366,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9342,
											"end": 9343,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9331,
											"end": 9340,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9327,
											"end": 9344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9320,
											"end": 9367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9384,
											"end": 9515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 9510,
											"end": 9514,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9384,
											"end": 9515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 9384,
											"end": 9515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9384,
											"end": 9515,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 9384,
											"end": 9515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9376,
											"end": 9515,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9376,
											"end": 9515,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9522,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9970,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 9528,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9677,
											"end": 9681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9715,
											"end": 9717,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 9704,
											"end": 9713,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9700,
											"end": 9718,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9692,
											"end": 9718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9692,
											"end": 9718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9728,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 9796,
											"end": 9797,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9785,
											"end": 9794,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9781,
											"end": 9798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9772,
											"end": 9778,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9728,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 9728,
											"end": 9799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9728,
											"end": 9799,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 9728,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 9877,
											"end": 9879,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9866,
											"end": 9875,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9862,
											"end": 9880,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9853,
											"end": 9859,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 9809,
											"end": 9881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9881,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 9809,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 9959,
											"end": 9961,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9948,
											"end": 9957,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9944,
											"end": 9962,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9941,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 9891,
											"end": 9963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9963,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 9891,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9970,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9970,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9976,
											"end": 10066,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 9976,
											"end": 10066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10010,
											"end": 10017,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10053,
											"end": 10058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10046,
											"end": 10059,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10060,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10028,
											"end": 10060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10028,
											"end": 10060,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9976,
											"end": 10066,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9976,
											"end": 10066,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9976,
											"end": 10066,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9976,
											"end": 10066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10072,
											"end": 10188,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 10072,
											"end": 10188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10142,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 10157,
											"end": 10162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10142,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 10142,
											"end": 10163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10142,
											"end": 10163,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 10142,
											"end": 10163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10135,
											"end": 10140,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10132,
											"end": 10164,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10122,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 10122,
											"end": 10182,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10175,
											"end": 10176,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10168,
											"end": 10180,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10122,
											"end": 10182,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 10122,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10072,
											"end": 10188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10072,
											"end": 10188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10194,
											"end": 10331,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 10194,
											"end": 10331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10248,
											"end": 10253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10279,
											"end": 10285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10273,
											"end": 10286,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10264,
											"end": 10286,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10264,
											"end": 10286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10295,
											"end": 10325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 10319,
											"end": 10324,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10295,
											"end": 10325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 10295,
											"end": 10325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10295,
											"end": 10325,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 10295,
											"end": 10325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10194,
											"end": 10331,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10194,
											"end": 10331,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10194,
											"end": 10331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10194,
											"end": 10331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10194,
											"end": 10331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10337,
											"end": 10682,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 10337,
											"end": 10682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10404,
											"end": 10410,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10453,
											"end": 10455,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10441,
											"end": 10450,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10432,
											"end": 10439,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10451,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10424,
											"end": 10456,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 10421,
											"end": 10540,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10421,
											"end": 10540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 10421,
											"end": 10540,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10459,
											"end": 10538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 10459,
											"end": 10538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 10459,
											"end": 10538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10459,
											"end": 10538,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 10459,
											"end": 10538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10421,
											"end": 10540,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 10421,
											"end": 10540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10579,
											"end": 10580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10604,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 10657,
											"end": 10664,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10648,
											"end": 10654,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10637,
											"end": 10646,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10604,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 10604,
											"end": 10665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10604,
											"end": 10665,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 10604,
											"end": 10665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10594,
											"end": 10665,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10594,
											"end": 10665,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10550,
											"end": 10675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10337,
											"end": 10682,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10337,
											"end": 10682,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10337,
											"end": 10682,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10337,
											"end": 10682,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10337,
											"end": 10682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10786,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 10688,
											"end": 10786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10739,
											"end": 10745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10773,
											"end": 10778,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10767,
											"end": 10779,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10757,
											"end": 10779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10757,
											"end": 10779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10786,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10792,
											"end": 10939,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 10792,
											"end": 10939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10893,
											"end": 10904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10930,
											"end": 10933,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10792,
											"end": 10939,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10792,
											"end": 10939,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10792,
											"end": 10939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10792,
											"end": 10939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10792,
											"end": 10939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10945,
											"end": 11084,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 10945,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11034,
											"end": 11040,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11029,
											"end": 11032,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11024,
											"end": 11027,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11018,
											"end": 11041,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 11075,
											"end": 11076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11061,
											"end": 11064,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11057,
											"end": 11073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11050,
											"end": 11077,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10945,
											"end": 11084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10945,
											"end": 11084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10945,
											"end": 11084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10945,
											"end": 11084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11090,
											"end": 11476,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 11090,
											"end": 11476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11194,
											"end": 11197,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11222,
											"end": 11260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 11254,
											"end": 11259,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11222,
											"end": 11260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 11222,
											"end": 11260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11222,
											"end": 11260,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 11222,
											"end": 11260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11276,
											"end": 11364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 11357,
											"end": 11363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11352,
											"end": 11355,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11276,
											"end": 11364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 11276,
											"end": 11364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11276,
											"end": 11364,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 11276,
											"end": 11364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11269,
											"end": 11364,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11269,
											"end": 11364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11373,
											"end": 11438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 11431,
											"end": 11437,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11426,
											"end": 11429,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11419,
											"end": 11423,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11412,
											"end": 11417,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11408,
											"end": 11424,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11373,
											"end": 11438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 11373,
											"end": 11438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11373,
											"end": 11438,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 11373,
											"end": 11438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11463,
											"end": 11469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11458,
											"end": 11461,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11454,
											"end": 11470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11447,
											"end": 11470,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11447,
											"end": 11470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11198,
											"end": 11476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11090,
											"end": 11476,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11090,
											"end": 11476,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11090,
											"end": 11476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11090,
											"end": 11476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11090,
											"end": 11476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11482,
											"end": 11753,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 11482,
											"end": 11753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11612,
											"end": 11615,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11634,
											"end": 11727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 11723,
											"end": 11726,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11714,
											"end": 11720,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11634,
											"end": 11727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 11634,
											"end": 11727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11634,
											"end": 11727,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 11634,
											"end": 11727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11627,
											"end": 11727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11627,
											"end": 11727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11744,
											"end": 11747,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11737,
											"end": 11747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11737,
											"end": 11747,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11482,
											"end": 11753,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11482,
											"end": 11753,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11482,
											"end": 11753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11482,
											"end": 11753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11482,
											"end": 11753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/transfer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balance()": "b69ef8a8",
							"owner()": "8da5cb5b",
							"transferERC20(address,address,uint256)": "9db5dbe4",
							"withdraw(uint256,address)": "00f714ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_destAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ERC20TransferSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TransferReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_destAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TransferSent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"destAddr\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/transfer.sol\":\"FeeCollector\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"contracts/transfer.sol\":{\"keccak256\":\"0xc46c033f772153e0459bfdcdba0d7ea08146419e74549f0465014d9ec68f8952\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c11917ebbb106b86faf4106bc1bc6ab543c2c1afc481229bc74fc03fda51e34a\",\"dweb:/ipfs/QmZMMcA98jt5mEDWYx5RF32Q9jAHZ9kRDwx8WpxgaSmYNQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 666,
								"contract": "contracts/transfer.sol:FeeCollector",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 668,
								"contract": "contracts/transfer.sol:FeeCollector",
								"label": "balance",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3022:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3045:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3070:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3093:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3119:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3155:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:1"
									},
									"scope": 113,
									"src": "2997:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3501:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3539:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:1"
									},
									"scope": 113,
									"src": "3485:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3791:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:1"
									},
									"scope": 113,
									"src": "3740:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "2113:1689:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 78,
							"src": "141:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 116,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "149:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 114,
							"src": "179:60:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 118,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 113,
										"src": "187:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 657,
							"src": "240:51:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 120,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 656,
										"src": "248:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 403,
							"linearizedBaseContracts": [
								403
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nameLocations": [
											"781:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 656,
										"src": "781:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:2",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:2",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 130,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "907:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:2"
									},
									"src": "876:46:2"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:2",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 139,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1060:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1086:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:2"
									},
									"src": "1004:109:2"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1375:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1405:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 154,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1427:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "1427:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 156,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 145,
																			"src": "1444:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1448:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1385:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:2"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:2",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1325:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 141,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1325:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1339:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1351:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:2"
									},
									"scope": 403,
									"src": "1303:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1792:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 180,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "1844:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:2",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "1844:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 182,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1865:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 183,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "1871:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 184,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "1875:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 178,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 176,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1802:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:2"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:2",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1728:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1728:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1742:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1756:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1768:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:2"
									},
									"scope": 403,
									"src": "1702:188:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2167:139:2",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "2177:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 207,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2200:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:2",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "2200:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2262:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2278:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2293:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2249:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:2"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:2",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2112:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2112:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2112:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2143:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:2"
									},
									"scope": 403,
									"src": "2081:225:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2607:370:2",
										"statements": [
											{
												"id": 262,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:2",
												"statements": [
													{
														"assignments": [
															233
														],
														"declarations": [
															{
																"constant": false,
																"id": 233,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:2",
																"nodeType": "VariableDeclaration",
																"scope": 262,
																"src": "2641:24:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 242,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 238,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 236,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2668:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2668:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "2725:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 244,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2744:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 253,
														"nodeType": "IfStatement",
														"src": "2721:160:2",
														"trueBody": {
															"id": 252,
															"nodeType": "Block",
															"src": "2763:118:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 247,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "2821:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 248,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 233,
																				"src": "2830:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 249,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "2848:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 246,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "2788:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 251,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 255,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2907:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 257,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "2923:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 258,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2942:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 254,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2894:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 261,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:2",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2540:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2540:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2554:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2571:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:2"
									},
									"scope": 403,
									"src": "2509:468:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "3373:303:2",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "3383:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 275,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 279,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3426:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:2",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "3426:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 281,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "3442:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "3451:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 277,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:2",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:2"
											},
											{
												"condition": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:2",
													"subExpression": {
														"arguments": [
															{
																"id": 287,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3498:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 288,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "3505:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 286,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3474:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "3469:201:2",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "3520:150:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3554:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "3576:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "3576:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 297,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "3592:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 299,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 293,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:2",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 291,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3534:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 305,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3646:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 303,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3619:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:2",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3318:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 266,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3318:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3318:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3332:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3349:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:2"
									},
									"scope": 403,
									"src": "3296:380:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "4129:559:2",
										"statements": [
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "4478:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 324,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "4512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4504:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 330,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4551:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 336,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4589:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 337,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:2",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4547:135:2",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4610:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 346,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 315,
																				"src": "4664:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 344,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 343,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "4631:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 349,
															"nodeType": "RevertStatement",
															"src": "4624:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4088:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "4088:6:2"
													},
													"referencedDeclaration": 77,
													"src": "4088:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4102:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:2"
									},
									"scope": 403,
									"src": "4059:629:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "5278:489:2",
										"statements": [
											{
												"assignments": [
													365,
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5574:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5588:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"id": 373,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 370,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "5623:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:2",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 377,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5669:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 383,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5706:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 384,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 386,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 381,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5738:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 363,
												"id": 400,
												"nodeType": "Return",
												"src": "5650:110:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5222:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 355,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "5222:6:2"
													},
													"referencedDeclaration": 77,
													"src": "5222:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5236:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5272:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:2"
									},
									"scope": 403,
									"src": "5189:578:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 404,
							"src": "751:5018:2",
							"usedErrors": [
								130,
								139
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 406,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 656,
							"linearizedBaseContracts": [
								656
							],
							"name": "Address",
							"nameLocation": "203:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 411,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "349:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:3"
									},
									"src": "316:50:3"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 416,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "475:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:3"
									},
									"src": "452:39:3"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 419,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"src": "591:24:3"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1602:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 432,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1640:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "1612:109:3",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "1648:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 437,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 434,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1669:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 440,
															"nodeType": "RevertStatement",
															"src": "1662:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1732:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1750:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:3"
											},
											{
												"condition": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:3",
													"subExpression": {
														"id": 452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "1793:63:3",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "1807:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 454,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "1828:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 456,
															"nodeType": "RevertStatement",
															"src": "1821:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:3"
									},
									"scope": 656,
									"src": "1531:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2794:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2841:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 470,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2811:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 475,
												"nodeType": "Return",
												"src": "2804:45:3"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2743:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:3"
									},
									"scope": 656,
									"src": "2705:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3293:279:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 491,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3331:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3303:108:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3338:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 499,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 497,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 496,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3359:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 502,
															"nodeType": "RevertStatement",
															"src": "3352:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3435:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3488:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "3481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3537:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3554:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3510:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 521,
												"nodeType": "Return",
												"src": "3503:62:3"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3211:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3227:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3279:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:3"
									},
									"scope": 656,
									"src": "3180:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3811:154:3",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3822:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3836:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3881:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3863:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 545,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3947:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3903:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 547,
												"nodeType": "Return",
												"src": "3896:62:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3739:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3755:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3797:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:3"
									},
									"scope": 656,
									"src": "3711:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4203:156:3",
										"statements": [
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4214:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4228:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4275:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4255:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 568,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4297:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 558,
												"id": 573,
												"nodeType": "Return",
												"src": "4290:62:3"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4152:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4189:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:3"
									},
									"scope": 656,
									"src": "4106:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4783:424:3",
										"statements": [
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:3",
													"subExpression": {
														"id": 587,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4857:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 594,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "5045:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 598,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "5071:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 609,
															"nodeType": "IfStatement",
															"src": "5041:119:3",
															"trueBody": {
																"id": 608,
																"nodeType": "Block",
																"src": "5096:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 605,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "5138:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 604,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "5121:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 607,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 610,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5180:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 586,
															"id": 611,
															"nodeType": "Return",
															"src": "5173:17:3"
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4793:408:3",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4807:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4829:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "4821:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4694:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4716:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4769:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:3"
									},
									"scope": 656,
									"src": "4625:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5509:122:3",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:3",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5524:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5583:42:3",
													"statements": [
														{
															"expression": {
																"id": 632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5604:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 624,
															"id": 633,
															"nodeType": "Return",
															"src": "5597:17:3"
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5519:106:3",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5533:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5555:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 627,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "5547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5447:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:3"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5495:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:3"
									},
									"scope": 656,
									"src": "5407:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "5798:461:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5874:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "6204:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 649,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6225:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 651,
															"nodeType": "RevertStatement",
															"src": "6218:24:3"
														}
													]
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "5870:383:3",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "5897:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:3",
																"nodeType": "YulBlock",
																"src": "6055:133:3",
																"statements": [
																	{
																		"nativeSrc": "6073:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:3"
																			},
																			"nativeSrc": "6096:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:3",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:3",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:3"
																					},
																					"nativeSrc": "6137:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nativeSrc": "6130:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:3"
																		},
																		"nativeSrc": "6130:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:3",
																	"valueSize": 1
																}
															],
															"id": 647,
															"nodeType": "InlineAssembly",
															"src": "6046:142:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5760:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:3"
									},
									"scope": 656,
									"src": "5743:516:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 657,
							"src": "195:6066:3",
							"usedErrors": [
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:3"
				},
				"id": 3
			},
			"contracts/transfer.sol": {
				"ast": {
					"absolutePath": "contracts/transfer.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"FeeCollector": [
							806
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						]
					},
					"id": 807,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 659,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 807,
							"sourceUnit": 404,
							"src": "60:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 660,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 807,
							"sourceUnit": 78,
							"src": "127:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FeeCollector",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 806,
							"linearizedBaseContracts": [
								806
							],
							"name": "FeeCollector",
							"nameLocation": "227:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 664,
									"libraryName": {
										"id": 661,
										"name": "SafeERC20",
										"nameLocations": [
											"253:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 403,
										"src": "253:9:4"
									},
									"nodeType": "UsingForDirective",
									"src": "247:27:4",
									"typeName": {
										"id": 663,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 662,
											"name": "IERC20",
											"nameLocations": [
												"267:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "267:6:4"
										},
										"referencedDeclaration": 77,
										"src": "267:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 666,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "297:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 806,
									"src": "282:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 665,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "282:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b69ef8a8",
									"id": 668,
									"mutability": "mutable",
									"name": "balance",
									"nameLocation": "324:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 806,
									"src": "309:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 667,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "309:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "f1b03f708b9c39f453fe3f0cef84164c7d6f7df836df0796e1e9c2bce6ee397e",
									"id": 674,
									"name": "TransferReceived",
									"nameLocation": "346:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "371:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "363:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "383:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "378:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "362:29:4"
									},
									"src": "340:52:4"
								},
								{
									"anonymous": false,
									"eventSelector": "fda3a3e0e1479b43cb1c701f7576187f4c4ad80768d627387e00184302f7d88e",
									"id": 682,
									"name": "TransferSent",
									"nameLocation": "404:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"indexed": false,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "425:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"indexed": false,
												"mutability": "mutable",
												"name": "_destAddr",
												"nameLocation": "440:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "432:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "456:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "451:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "451:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:48:4"
									},
									"src": "398:67:4"
								},
								{
									"anonymous": false,
									"eventSelector": "03501c7341fda73ec7c804f841cec1d8d25a04b5a430589f0624026eb1cff370",
									"id": 690,
									"name": "ERC20TransferSent",
									"nameLocation": "477:17:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"indexed": false,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "503:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "495:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"indexed": false,
												"mutability": "mutable",
												"name": "_destAddr",
												"nameLocation": "518:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "510:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "534:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "529:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "529:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:48:4"
									},
									"src": "471:72:4"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "565:37:4",
										"statements": [
											{
												"expression": {
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 693,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "576:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 694,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "584:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "588:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "584:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "576:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "576:18:4"
											}
										]
									},
									"id": 699,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "562:2:4"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:0:4"
									},
									"scope": 806,
									"src": "551:51:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "637:94:4",
										"statements": [
											{
												"expression": {
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 702,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "648:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 703,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "659:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "663:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "659:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "648:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "648:20:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 708,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "701:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "705:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "701:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 710,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "713:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "717:5:4",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "713:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 707,
														"name": "TransferReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "684:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "684:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "EmitStatement",
												"src": "679:44:4"
											}
										]
									},
									"id": 715,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:4"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "637:0:4"
									},
									"scope": 806,
									"src": "610:121:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "803:263:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 723,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "822:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "826:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "822:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 725,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "836:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "822:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2077697468647261772066756e6473",
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "843:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36b9982a87fc35dcce21cd7c9fe5259f8195356730e6a709672932073665fac0",
																"typeString": "literal_string \"Only owner can withdraw funds\""
															},
															"value": "Only owner can withdraw funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36b9982a87fc35dcce21cd7c9fe5259f8195356730e6a709672932073665fac0",
																"typeString": "literal_string \"Only owner can withdraw funds\""
															}
														],
														"id": 722,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "814:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "814:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "814:61:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 731,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "894:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 732,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "904:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "894:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e6473",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "913:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															},
															"value": "Insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															}
														],
														"id": 730,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "886:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "886:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "886:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 740,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "965:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 737,
															"name": "destAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "947:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "956:8:4",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "947:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "947:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "947:25:4"
											},
											{
												"expression": {
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 743,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "983:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 744,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "994:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "983:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "983:17:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 748,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1029:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1033:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1029:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "destAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "1041:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 751,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "1051:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 747,
														"name": "TransferSent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "1016:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1016:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "EmitStatement",
												"src": "1011:47:4"
											}
										]
									},
									"functionSelector": "00f714ce",
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "748:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "762:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "757:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "757:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "destAddr",
												"nameLocation": "786:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "770:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "770:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:39:4"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:4"
									},
									"scope": 806,
									"src": "739:327:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "1211:347:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 766,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1230:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1234:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1230:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 768,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "1244:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1230:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2077697468647261772066756e6473",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1251:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36b9982a87fc35dcce21cd7c9fe5259f8195356730e6a709672932073665fac0",
																"typeString": "literal_string \"Only owner can withdraw funds\""
															},
															"value": "Only owner can withdraw funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36b9982a87fc35dcce21cd7c9fe5259f8195356730e6a709672932073665fac0",
																"typeString": "literal_string \"Only owner can withdraw funds\""
															}
														],
														"id": 765,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1222:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1222:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "1222:61:4"
											},
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "erc20balance",
														"nameLocation": "1302:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 804,
														"src": "1294:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1294:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 782,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 779,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1341:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FeeCollector_$806",
																		"typeString": "contract FeeCollector"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FeeCollector_$806",
																		"typeString": "contract FeeCollector"
																	}
																],
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1333:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 777,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1333:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1333:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 775,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "1317:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1323:9:4",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1317:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1317:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1294:53:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 784,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "1366:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 785,
																"name": "erc20balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "1376:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1366:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42616c616e6365206973206c6f77",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1390:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c43fd0ca3947cf871eff184fdae3f2d339f1548be2649c2b62c42e0f6a3bc3af",
																"typeString": "literal_string \"Balance is low\""
															},
															"value": "Balance is low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c43fd0ca3947cf871eff184fdae3f2d339f1548be2649c2b62c42e0f6a3bc3af",
																"typeString": "literal_string \"Balance is low\""
															}
														],
														"id": 783,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1358:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1358:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "1358:49:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 793,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "1439:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 794,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "1443:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 790,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "1420:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1426:12:4",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "1420:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1420:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "1420:30:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 798,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1527:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1527:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 800,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "1539:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 801,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "1543:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 797,
														"name": "ERC20TransferSent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "1509:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1509:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "EmitStatement",
												"src": "1504:46:4"
											}
										]
									},
									"functionSelector": "9db5dbe4",
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferERC20",
									"nameLocation": "1148:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1169:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "1162:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 757,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 756,
														"name": "IERC20",
														"nameLocations": [
															"1162:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1162:6:4"
													},
													"referencedDeclaration": 77,
													"src": "1162:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1184:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "1176:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1196:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "1188:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1161:42:4"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1211:0:4"
									},
									"scope": 806,
									"src": "1139:419:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 807,
							"src": "218:1343:4",
							"usedErrors": [
								130,
								411,
								416,
								419
							],
							"usedEvents": [
								674,
								682,
								690
							]
						}
					],
					"src": "33:1530:4"
				},
				"id": 4
			}
		}
	}
}